(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function i(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(s){if(s.ep)return;s.ep=!0;const n=i(s);fetch(s.href,n)}})();async function et(){return(await navigator.mediaDevices.getUserMedia({video:!0})).getTracks().forEach(i=>i.stop()),(await navigator.mediaDevices.enumerateDevices()).filter(i=>i.kind==="videoinput")}async function xt(t,e){console.log("Opening camera",t.label);const i=await navigator.mediaDevices.getUserMedia({audio:!1,video:{deviceId:{exact:t.deviceId},width:{ideal:e.width},height:{ideal:e.height},resizeMode:{exact:"none"}}});return{subject:i,stop:()=>Promise.resolve(i.getTracks().forEach(r=>r.stop()))}}function _t(t){function e(){let i=!1;return function(r){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(r)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(r.substr(0,4)))&&(i=!0)}(navigator.userAgent),i}return!e()||t.getVideoTracks().some(i=>i.getCapabilities().facingMode?.includes("user"))}/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */function m(t){if(!t)throw new Error("Assertion failed.")}const V=t=>t&&t[t.length-1],Z=t=>t>=0&&t<2**32;class se{constructor(e){this.bytes=e,this.pos=0}seekToByte(e){this.pos=8*e}readBit(){const e=Math.floor(this.pos/8),i=this.bytes[e]??0,r=7-(this.pos&7),s=(i&1<<r)>>r;return this.pos++,s}readBits(e){let i=0;for(let r=0;r<e;r++)i<<=1,i|=this.readBit();return i}readAlignedByte(){if(this.pos%8!==0)throw new Error("Bitstream is not byte-aligned.");const e=this.pos/8,i=this.bytes[e]??0;return this.pos+=8,i}skipBits(e){this.pos+=e}getBitsLeft(){return this.bytes.length*8-this.pos}clone(){const e=new se(this.bytes);return e.pos=this.pos,e}}const h=t=>{let e=0;for(;t.readBit()===0&&e<32;)e++;if(e>=32)throw new Error("Invalid exponential-Golomb code.");return(1<<e)-1+t.readBits(e)},re=t=>{const e=h(t);return(e&1)===0?-(e>>1):e+1>>1},N=t=>t instanceof Uint8Array?t:t instanceof ArrayBuffer?new Uint8Array(t):new Uint8Array(t.buffer,t.byteOffset,t.byteLength),St=t=>t instanceof DataView?t:t instanceof ArrayBuffer?new DataView(t):new DataView(t.buffer,t.byteOffset,t.byteLength),K=new TextEncoder,Fe=t=>Object.fromEntries(Object.entries(t).map(([e,i])=>[i,e])),ue={bt709:1,bt470bg:5,smpte170m:6,bt2020:9,smpte432:12};Fe(ue);const he={bt709:1,smpte170m:6,linear:8,"iec61966-2-1":13,pg:16,hlg:18};Fe(he);const me={rgb:0,bt709:1,bt470bg:5,smpte170m:6,"bt2020-ncl":9};Fe(me);const Et=t=>!!t&&!!t.primaries&&!!t.transfer&&!!t.matrix&&t.fullRange!==void 0,Ae=t=>t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer||ArrayBuffer.isView(t);class tt{constructor(){this.currentPromise=Promise.resolve()}async acquire(){let e;const i=new Promise(s=>{e=s}),r=this.currentPromise;return this.currentPromise=i,await r,e}}const kt=()=>{let t,e;return{promise:new Promise((r,s)=>{t=r,e=s}),resolve:t,reject:e}},Bt="und",Pt=/^[a-z]{3}$/,Mt=t=>Pt.test(t),X=1e6*(1+Number.EPSILON),Ft=(t,e)=>{const i=t<0?-1:1;t=Math.abs(t);let r=0,s=1,n=1,o=0,a=t;for(;;){const c=Math.floor(a),l=c*n+r,d=c*o+s;if(d>e)return{numerator:i*n,denominator:o};if(r=n,s=o,n=l,o=d,a=1/(a-c),!isFinite(a))break}return{numerator:i*n,denominator:o}};class At{constructor(){this.currentPromise=Promise.resolve()}call(e){return this.currentPromise=this.currentPromise.then(e)}}/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */const Ee=[];/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */const R=["avc","hevc","vp9","av1","vp8"],H=["pcm-s16","pcm-s16be","pcm-s24","pcm-s24be","pcm-s32","pcm-s32be","pcm-f32","pcm-f32be","pcm-f64","pcm-f64be","pcm-u8","pcm-s8","ulaw","alaw"],it=["aac","opus","mp3","vorbis","flac"],le=[...it,...H],de=["webvtt"],Ne=[{maxMacroblocks:99,maxBitrate:64e3,level:10},{maxMacroblocks:396,maxBitrate:192e3,level:11},{maxMacroblocks:396,maxBitrate:384e3,level:12},{maxMacroblocks:396,maxBitrate:768e3,level:13},{maxMacroblocks:396,maxBitrate:2e6,level:20},{maxMacroblocks:792,maxBitrate:4e6,level:21},{maxMacroblocks:1620,maxBitrate:4e6,level:22},{maxMacroblocks:1620,maxBitrate:1e7,level:30},{maxMacroblocks:3600,maxBitrate:14e6,level:31},{maxMacroblocks:5120,maxBitrate:2e7,level:32},{maxMacroblocks:8192,maxBitrate:2e7,level:40},{maxMacroblocks:8192,maxBitrate:5e7,level:41},{maxMacroblocks:8704,maxBitrate:5e7,level:42},{maxMacroblocks:22080,maxBitrate:135e6,level:50},{maxMacroblocks:36864,maxBitrate:24e7,level:51},{maxMacroblocks:36864,maxBitrate:24e7,level:52},{maxMacroblocks:139264,maxBitrate:24e7,level:60},{maxMacroblocks:139264,maxBitrate:48e7,level:61},{maxMacroblocks:139264,maxBitrate:8e8,level:62}],Re=[{maxPictureSize:36864,maxBitrate:128e3,tier:"L",level:30},{maxPictureSize:122880,maxBitrate:15e5,tier:"L",level:60},{maxPictureSize:245760,maxBitrate:3e6,tier:"L",level:63},{maxPictureSize:552960,maxBitrate:6e6,tier:"L",level:90},{maxPictureSize:983040,maxBitrate:1e7,tier:"L",level:93},{maxPictureSize:2228224,maxBitrate:12e6,tier:"L",level:120},{maxPictureSize:2228224,maxBitrate:3e7,tier:"H",level:120},{maxPictureSize:2228224,maxBitrate:2e7,tier:"L",level:123},{maxPictureSize:2228224,maxBitrate:5e7,tier:"H",level:123},{maxPictureSize:8912896,maxBitrate:25e6,tier:"L",level:150},{maxPictureSize:8912896,maxBitrate:1e8,tier:"H",level:150},{maxPictureSize:8912896,maxBitrate:4e7,tier:"L",level:153},{maxPictureSize:8912896,maxBitrate:16e7,tier:"H",level:153},{maxPictureSize:8912896,maxBitrate:6e7,tier:"L",level:156},{maxPictureSize:8912896,maxBitrate:24e7,tier:"H",level:156},{maxPictureSize:35651584,maxBitrate:6e7,tier:"L",level:180},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:180},{maxPictureSize:35651584,maxBitrate:12e7,tier:"L",level:183},{maxPictureSize:35651584,maxBitrate:48e7,tier:"H",level:183},{maxPictureSize:35651584,maxBitrate:24e7,tier:"L",level:186},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:186}],$e=[{maxPictureSize:36864,maxBitrate:2e5,level:10},{maxPictureSize:73728,maxBitrate:8e5,level:11},{maxPictureSize:122880,maxBitrate:18e5,level:20},{maxPictureSize:245760,maxBitrate:36e5,level:21},{maxPictureSize:552960,maxBitrate:72e5,level:30},{maxPictureSize:983040,maxBitrate:12e6,level:31},{maxPictureSize:2228224,maxBitrate:18e6,level:40},{maxPictureSize:2228224,maxBitrate:3e7,level:41},{maxPictureSize:8912896,maxBitrate:6e7,level:50},{maxPictureSize:8912896,maxBitrate:12e7,level:51},{maxPictureSize:8912896,maxBitrate:18e7,level:52},{maxPictureSize:35651584,maxBitrate:18e7,level:60},{maxPictureSize:35651584,maxBitrate:24e7,level:61},{maxPictureSize:35651584,maxBitrate:48e7,level:62}],He=[{maxPictureSize:147456,maxBitrate:15e5,tier:"M",level:0},{maxPictureSize:278784,maxBitrate:3e6,tier:"M",level:1},{maxPictureSize:665856,maxBitrate:6e6,tier:"M",level:4},{maxPictureSize:1065024,maxBitrate:1e7,tier:"M",level:5},{maxPictureSize:2359296,maxBitrate:12e6,tier:"M",level:8},{maxPictureSize:2359296,maxBitrate:3e7,tier:"H",level:8},{maxPictureSize:2359296,maxBitrate:2e7,tier:"M",level:9},{maxPictureSize:2359296,maxBitrate:5e7,tier:"H",level:9},{maxPictureSize:8912896,maxBitrate:3e7,tier:"M",level:12},{maxPictureSize:8912896,maxBitrate:1e8,tier:"H",level:12},{maxPictureSize:8912896,maxBitrate:4e7,tier:"M",level:13},{maxPictureSize:8912896,maxBitrate:16e7,tier:"H",level:13},{maxPictureSize:8912896,maxBitrate:6e7,tier:"M",level:14},{maxPictureSize:8912896,maxBitrate:24e7,tier:"H",level:14},{maxPictureSize:35651584,maxBitrate:6e7,tier:"M",level:15},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:15},{maxPictureSize:35651584,maxBitrate:6e7,tier:"M",level:16},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:16},{maxPictureSize:35651584,maxBitrate:1e8,tier:"M",level:17},{maxPictureSize:35651584,maxBitrate:48e7,tier:"H",level:17},{maxPictureSize:35651584,maxBitrate:16e7,tier:"M",level:18},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:18},{maxPictureSize:35651584,maxBitrate:16e7,tier:"M",level:19},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:19}],ke=(t,e,i,r)=>{if(t==="avc"){const n=Math.ceil(e/16)*Math.ceil(i/16),o=Ne.find(w=>n<=w.maxMacroblocks&&r<=w.maxBitrate)??V(Ne),a=o?o.level:0,c="64".padStart(2,"0"),l="00",d=a.toString(16).padStart(2,"0");return`avc1.${c}${l}${d}`}else if(t==="hevc"){const s="",o="6",a=e*i,c=Re.find(d=>a<=d.maxPictureSize&&r<=d.maxBitrate)??V(Re);return`hev1.${s}1.${o}.${c.tier}${c.level}.B0`}else{if(t==="vp8")return"vp8";if(t==="vp9"){const s="00",n=e*i,o=$e.find(c=>n<=c.maxPictureSize&&r<=c.maxBitrate)??V($e);return`vp09.${s}.${o.level.toString().padStart(2,"0")}.08`}else if(t==="av1"){const n=e*i,o=He.find(l=>n<=l.maxPictureSize&&r<=l.maxBitrate)??V(He);return`av01.0.${o.level.toString().padStart(2,"0")}${o.tier}.08`}}throw new TypeError(`Unhandled codec '${t}'.`)},zt=t=>{const e=t.split("."),s=(1<<7)+1,n=Number(e[1]),o=e[2],a=Number(o.slice(0,-1)),c=(n<<5)+a,l=o.slice(-1)==="H"?1:0,w=Number(e[3])===8?0:1,v=0,g=e[4]?Number(e[4]):0,y=e[5]?Number(e[5][0]):1,E=e[5]?Number(e[5][1]):1,A=e[5]?Number(e[5][2]):0,q=(l<<7)+(w<<6)+(v<<5)+(g<<4)+(y<<3)+(E<<2)+A;return[s,c,q,0]},rt=/^pcm-([usf])(\d+)+(be)?$/,oe=t=>{if(m(H.includes(t)),t==="ulaw")return{dataType:"ulaw",sampleSize:1,littleEndian:!0,silentValue:255};if(t==="alaw")return{dataType:"alaw",sampleSize:1,littleEndian:!0,silentValue:213};const e=rt.exec(t);m(e);let i;e[1]==="u"?i="unsigned":e[1]==="s"?i="signed":i="float";const r=Number(e[2])/8,s=e[3]!=="be",n=t==="pcm-u8"?2**7:0;return{dataType:i,sampleSize:r,littleEndian:s,silentValue:n}},It=t=>t.startsWith("avc1")||t.startsWith("avc3")?"avc":t.startsWith("hev1")||t.startsWith("hvc1")?"hevc":t==="vp8"?"vp8":t.startsWith("vp09")?"vp9":t.startsWith("av01")?"av1":t.startsWith("mp4a.40")||t==="mp4a.67"?"aac":t==="mp3"||t==="mp4a.69"||t==="mp4a.6B"||t==="mp4a.6b"?"mp3":t==="opus"?"opus":t==="vorbis"?"vorbis":t==="flac"?"flac":t==="ulaw"?"ulaw":t==="alaw"?"alaw":rt.test(t)?t:t==="webvtt"?"webvtt":null,Be=t=>t==="avc"?{avc:{format:"avc"}}:t==="hevc"?{hevc:{format:"hevc"}}:{};class ne{constructor(e){this._factor=e}_toVideoBitrate(e,i,r){const s=i*r,n={avc:1,hevc:.6,vp9:.6,av1:.4,vp8:1.2},o=1920*1080,a=3e6,c=Math.pow(s/o,.95),w=a*c*n[e]*this._factor;return Math.ceil(w/1e3)*1e3}_toAudioBitrate(e){if(H.includes(e)||e==="flac")return;const r={aac:128e3,opus:64e3,mp3:16e4,vorbis:64e3}[e];if(!r)throw new Error(`Unhandled codec: ${e}`);let s=r*this._factor;return e==="aac"?s=[96e3,128e3,16e4,192e3].reduce((o,a)=>Math.abs(a-s)<Math.abs(o-s)?a:o):e==="opus"||e==="vorbis"?s=Math.max(6e3,s):e==="mp3"&&(s=[8e3,16e3,24e3,32e3,4e4,48e3,64e3,8e4,96e3,112e3,128e3,16e4,192e3,224e3,256e3,32e4].reduce((o,a)=>Math.abs(a-s)<Math.abs(o-s)?a:o)),Math.round(s/1e3)*1e3}}const st=new ne(4),Vt=["avc1","avc3","hev1","hvc1","vp8","vp09","av01"],Ot=/^(avc1|avc3)\.[0-9a-fA-F]{6}$/,Wt=/^(hev1|hvc1)\.(?:[ABC]?\d+)\.[0-9a-fA-F]{1,8}\.[LH]\d+(?:\.[0-9a-fA-F]{1,2}){0,6}$/,Ut=/^vp09(?:\.\d{2}){3}(?:(?:\.\d{2}){5})?$/,Lt=/^av01\.\d\.\d{2}[MH]\.\d{2}(?:\.\d\.\d{3}\.\d{2}\.\d{2}\.\d{2}\.\d)?$/,Nt=t=>{if(!t)throw new TypeError("Video chunk metadata must be provided.");if(typeof t!="object")throw new TypeError("Video chunk metadata must be an object.");if(!t.decoderConfig)throw new TypeError("Video chunk metadata must include a decoder configuration.");if(typeof t.decoderConfig!="object")throw new TypeError("Video chunk metadata decoder configuration must be an object.");if(typeof t.decoderConfig.codec!="string")throw new TypeError("Video chunk metadata decoder configuration must specify a codec string.");if(!Vt.some(e=>t.decoderConfig.codec.startsWith(e)))throw new TypeError("Video chunk metadata decoder configuration codec string must be a valid video codec string as specified in the WebCodecs Codec Registry.");if(!Number.isInteger(t.decoderConfig.codedWidth)||t.decoderConfig.codedWidth<=0)throw new TypeError("Video chunk metadata decoder configuration must specify a valid codedWidth (positive integer).");if(!Number.isInteger(t.decoderConfig.codedHeight)||t.decoderConfig.codedHeight<=0)throw new TypeError("Video chunk metadata decoder configuration must specify a valid codedHeight (positive integer).");if(t.decoderConfig.description!==void 0&&!Ae(t.decoderConfig.description))throw new TypeError("Video chunk metadata decoder configuration description, when defined, must be an ArrayBuffer or an ArrayBuffer view.");if(t.decoderConfig.colorSpace!==void 0){const{colorSpace:e}=t.decoderConfig;if(typeof e!="object")throw new TypeError("Video chunk metadata decoder configuration colorSpace, when provided, must be an object.");const i=Object.keys(ue);if(e.primaries!=null&&!i.includes(e.primaries))throw new TypeError(`Video chunk metadata decoder configuration colorSpace primaries, when defined, must be one of ${i.join(", ")}.`);const r=Object.keys(he);if(e.transfer!=null&&!r.includes(e.transfer))throw new TypeError(`Video chunk metadata decoder configuration colorSpace transfer, when defined, must be one of ${r.join(", ")}.`);const s=Object.keys(me);if(e.matrix!=null&&!s.includes(e.matrix))throw new TypeError(`Video chunk metadata decoder configuration colorSpace matrix, when defined, must be one of ${s.join(", ")}.`);if(e.fullRange!=null&&typeof e.fullRange!="boolean")throw new TypeError("Video chunk metadata decoder configuration colorSpace fullRange, when defined, must be a boolean.")}if(t.decoderConfig.codec.startsWith("avc1")||t.decoderConfig.codec.startsWith("avc3")){if(!Ot.test(t.decoderConfig.codec))throw new TypeError("Video chunk metadata decoder configuration codec string for AVC must be a valid AVC codec string as specified in Section 3.4 of RFC 6381.")}else if(t.decoderConfig.codec.startsWith("hev1")||t.decoderConfig.codec.startsWith("hvc1")){if(!Wt.test(t.decoderConfig.codec))throw new TypeError("Video chunk metadata decoder configuration codec string for HEVC must be a valid HEVC codec string as specified in Section E.3 of ISO 14496-15.")}else if(t.decoderConfig.codec.startsWith("vp8")){if(t.decoderConfig.codec!=="vp8")throw new TypeError('Video chunk metadata decoder configuration codec string for VP8 must be "vp8".')}else if(t.decoderConfig.codec.startsWith("vp09")){if(!Ut.test(t.decoderConfig.codec))throw new TypeError('Video chunk metadata decoder configuration codec string for VP9 must be a valid VP9 codec string as specified in Section "Codecs Parameter String" of https://www.webmproject.org/vp9/mp4/.')}else if(t.decoderConfig.codec.startsWith("av01")&&!Lt.test(t.decoderConfig.codec))throw new TypeError('Video chunk metadata decoder configuration codec string for AV1 must be a valid AV1 codec string as specified in Section "Codecs Parameter String" of https://aomediacodec.github.io/av1-isobmff/.')},Rt=["mp4a","mp3","opus","vorbis","flac","ulaw","alaw","pcm"],$t=t=>{if(!t)throw new TypeError("Audio chunk metadata must be provided.");if(typeof t!="object")throw new TypeError("Audio chunk metadata must be an object.");if(!t.decoderConfig)throw new TypeError("Audio chunk metadata must include a decoder configuration.");if(typeof t.decoderConfig!="object")throw new TypeError("Audio chunk metadata decoder configuration must be an object.");if(typeof t.decoderConfig.codec!="string")throw new TypeError("Audio chunk metadata decoder configuration must specify a codec string.");if(!Rt.some(e=>t.decoderConfig.codec.startsWith(e)))throw new TypeError("Audio chunk metadata decoder configuration codec string must be a valid audio codec string as specified in the WebCodecs Codec Registry.");if(!Number.isInteger(t.decoderConfig.sampleRate)||t.decoderConfig.sampleRate<=0)throw new TypeError("Audio chunk metadata decoder configuration must specify a valid sampleRate (positive integer).");if(!Number.isInteger(t.decoderConfig.numberOfChannels)||t.decoderConfig.numberOfChannels<=0)throw new TypeError("Audio chunk metadata decoder configuration must specify a valid numberOfChannels (positive integer).");if(t.decoderConfig.description!==void 0&&!Ae(t.decoderConfig.description))throw new TypeError("Audio chunk metadata decoder configuration description, when defined, must be an ArrayBuffer or an ArrayBuffer view.");if(t.decoderConfig.codec.startsWith("mp4a")&&t.decoderConfig.codec!=="mp4a.69"&&t.decoderConfig.codec!=="mp4a.6B"&&t.decoderConfig.codec!=="mp4a.6b"){if(!["mp4a.40.2","mp4a.40.02","mp4a.40.5","mp4a.40.05","mp4a.40.29","mp4a.67"].includes(t.decoderConfig.codec))throw new TypeError("Audio chunk metadata decoder configuration codec string for AAC must be a valid AAC codec string as specified in https://www.w3.org/TR/webcodecs-aac-codec-registration/.");if(!t.decoderConfig.description)throw new TypeError("Audio chunk metadata decoder configuration for AAC must include a description, which is expected to be an AudioSpecificConfig as specified in ISO 14496-3.")}else if(t.decoderConfig.codec.startsWith("mp3")||t.decoderConfig.codec.startsWith("mp4a")){if(t.decoderConfig.codec!=="mp3"&&t.decoderConfig.codec!=="mp4a.69"&&t.decoderConfig.codec!=="mp4a.6B"&&t.decoderConfig.codec!=="mp4a.6b")throw new TypeError('Audio chunk metadata decoder configuration codec string for MP3 must be "mp3", "mp4a.69" or "mp4a.6B".')}else if(t.decoderConfig.codec.startsWith("opus")){if(t.decoderConfig.codec!=="opus")throw new TypeError('Audio chunk metadata decoder configuration codec string for Opus must be "opus".');if(t.decoderConfig.description&&t.decoderConfig.description.byteLength<18)throw new TypeError("Audio chunk metadata decoder configuration description, when specified, is expected to be an Identification Header as specified in Section 5.1 of RFC 7845.")}else if(t.decoderConfig.codec.startsWith("vorbis")){if(t.decoderConfig.codec!=="vorbis")throw new TypeError('Audio chunk metadata decoder configuration codec string for Vorbis must be "vorbis".');if(!t.decoderConfig.description)throw new TypeError("Audio chunk metadata decoder configuration for Vorbis must include a description, which is expected to adhere to the format described in https://www.w3.org/TR/webcodecs-vorbis-codec-registration/.")}else if(t.decoderConfig.codec.startsWith("flac")){if(t.decoderConfig.codec!=="flac")throw new TypeError('Audio chunk metadata decoder configuration codec string for FLAC must be "flac".');if(!t.decoderConfig.description||t.decoderConfig.description.byteLength<42)throw new TypeError("Audio chunk metadata decoder configuration for FLAC must include a description, which is expected to adhere to the format described in https://www.w3.org/TR/webcodecs-flac-codec-registration/.")}else if((t.decoderConfig.codec.startsWith("pcm")||t.decoderConfig.codec.startsWith("ulaw")||t.decoderConfig.codec.startsWith("alaw"))&&!H.includes(t.decoderConfig.codec))throw new TypeError(`Audio chunk metadata decoder configuration codec string for PCM must be one of the supported PCM codecs (${H.join(", ")}).`)},Ht=t=>{if(!t)throw new TypeError("Subtitle metadata must be provided.");if(typeof t!="object")throw new TypeError("Subtitle metadata must be an object.");if(!t.config)throw new TypeError("Subtitle metadata must include a config object.");if(typeof t.config!="object")throw new TypeError("Subtitle metadata config must be an object.");if(typeof t.config.description!="string")throw new TypeError("Subtitle metadata config description must be a string.")},jt=async(t,{width:e=1280,height:i=720,bitrate:r=1e6}={})=>{if(!R.includes(t))return!1;if(!Number.isInteger(e)||e<=0)throw new TypeError("width must be a positive integer.");if(!Number.isInteger(i)||i<=0)throw new TypeError("height must be a positive integer.");if(!(r instanceof ne)&&(!Number.isInteger(r)||r<=0))throw new TypeError("bitrate must be a positive integer or a quality.");const s=r instanceof ne?r._toVideoBitrate(t,e,i):r;if(Ee.length>0){const o={codec:ke(t,e,i,s),width:e,height:i,bitrate:s,...Be(t)};if(Ee.some(a=>a.supports(t,o)))return!0}return typeof VideoEncoder>"u"?!1:(await VideoEncoder.isConfigSupported({codec:ke(t,e,i,s),width:e,height:i,bitrate:s,...Be(t)})).supported===!0},qt=async(t,e)=>{for(const i of t)if(await jt(i,e))return i;return null};/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */const je=/<(?:(\d{2}):)?(\d{2}):(\d{2}).(\d{3})>/g,Qt=t=>{const e=Math.floor(t/36e5),i=Math.floor(t%(60*60*1e3)/(60*1e3)),r=Math.floor(t%(60*1e3)/1e3),s=t%1e3;return e.toString().padStart(2,"0")+":"+i.toString().padStart(2,"0")+":"+r.toString().padStart(2,"0")+"."+s.toString().padStart(3,"0")};/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */const ze=t=>{const e=[];let i=0;for(;i<t.length;){let r=-1,s=0;for(let n=i;n<t.length-3;n++){if(t[n]===0&&t[n+1]===0&&t[n+2]===1){r=n,s=3;break}if(n<t.length-4&&t[n]===0&&t[n+1]===0&&t[n+2]===0&&t[n+3]===1){r=n,s=4;break}}if(r===-1)break;if(i>0&&r>i){const n=t.subarray(i,r);n.length>0&&e.push(n)}i=r+s}if(i<t.length){const r=t.subarray(i);r.length>0&&e.push(r)}return e},Pe=t=>{const e=[],i=t.length;for(let r=0;r<i;r++)r+2<i&&t[r]===0&&t[r+1]===0&&t[r+2]===3?(e.push(0,0),r+=2):e.push(t[r]);return new Uint8Array(e)},Gt=t=>{const i=ze(t);if(i.length===0)return null;let r=0;for(const a of i)r+=4+a.byteLength;const s=new Uint8Array(r),n=new DataView(s.buffer);let o=0;for(const a of i){const c=a.byteLength;n.setUint32(o,c,!1),o+=4,s.set(a,o),o+=a.byteLength}return s},ge=t=>t[0]&31,Kt=t=>{try{const e=ze(t),i=e.filter(v=>ge(v)===7),r=e.filter(v=>ge(v)===8),s=e.filter(v=>ge(v)===13);if(i.length===0||r.length===0)return null;const n=i[0],o=new se(Pe(n));if(o.skipBits(1),o.skipBits(2),o.readBits(5)!==7)return console.error("Invalid SPS NAL unit type"),null;const c=o.readAlignedByte(),l=o.readAlignedByte(),d=o.readAlignedByte(),w={configurationVersion:1,avcProfileIndication:c,profileCompatibility:l,avcLevelIndication:d,lengthSizeMinusOne:3,sequenceParameterSets:i,pictureParameterSets:r,chromaFormat:null,bitDepthLumaMinus8:null,bitDepthChromaMinus8:null,sequenceParameterSetExt:null};if(c===100||c===110||c===122||c===144){h(o);const v=h(o);v===3&&o.skipBits(1);const g=h(o),y=h(o);w.chromaFormat=v,w.bitDepthLumaMinus8=g,w.bitDepthChromaMinus8=y,w.sequenceParameterSetExt=s}return w}catch(e){return console.error("Error building AVC Decoder Configuration Record:",e),null}},Xt=t=>{const e=[];e.push(t.configurationVersion),e.push(t.avcProfileIndication),e.push(t.profileCompatibility),e.push(t.avcLevelIndication),e.push(252|t.lengthSizeMinusOne&3),e.push(224|t.sequenceParameterSets.length&31);for(const i of t.sequenceParameterSets){const r=i.byteLength;e.push(r>>8),e.push(r&255);for(let s=0;s<r;s++)e.push(i[s])}e.push(t.pictureParameterSets.length);for(const i of t.pictureParameterSets){const r=i.byteLength;e.push(r>>8),e.push(r&255);for(let s=0;s<r;s++)e.push(i[s])}if(t.avcProfileIndication===100||t.avcProfileIndication===110||t.avcProfileIndication===122||t.avcProfileIndication===144){m(t.chromaFormat!==null),m(t.bitDepthLumaMinus8!==null),m(t.bitDepthChromaMinus8!==null),m(t.sequenceParameterSetExt!==null),e.push(252|t.chromaFormat&3),e.push(248|t.bitDepthLumaMinus8&7),e.push(248|t.bitDepthChromaMinus8&7),e.push(t.sequenceParameterSetExt.length);for(const i of t.sequenceParameterSetExt){const r=i.byteLength;e.push(r>>8),e.push(r&255);for(let s=0;s<r;s++)e.push(i[s])}}return new Uint8Array(e)},qe=32,Qe=33,Ge=34,Yt=39,Zt=40,G=t=>t[0]>>1&63,Jt=t=>{try{const e=ze(t),i=e.filter(P=>G(P)===qe),r=e.filter(P=>G(P)===Qe),s=e.filter(P=>G(P)===Ge),n=e.filter(P=>G(P)===Yt||G(P)===Zt);if(r.length===0||s.length===0)return null;const o=r[0],a=new se(Pe(o));a.skipBits(16),a.readBits(4);const c=a.readBits(3),l=a.readBits(1),{general_profile_space:d,general_tier_flag:w,general_profile_idc:v,general_profile_compatibility_flags:g,general_constraint_indicator_flags:y,general_level_idc:E}=Dt(a,c);h(a);const A=h(a);A===3&&a.skipBits(1),h(a),h(a),a.readBits(1)&&(h(a),h(a),h(a),h(a));const q=h(a),ae=h(a);h(a);const F=a.readBits(1)?0:c;for(let P=F;P<=c;P++)h(a),h(a),h(a);h(a),h(a),h(a),h(a),h(a),h(a),a.readBits(1)&&a.readBits(1)&&ei(a),a.skipBits(1),a.skipBits(1),a.readBits(1)&&(a.skipBits(4),a.skipBits(4),h(a),h(a),a.skipBits(1));const $=h(a);if(ti(a,$),a.readBits(1)){const P=h(a);for(let _=0;_<P;_++)h(a),a.skipBits(1)}a.skipBits(1),a.skipBits(1);let Q=0;a.readBits(1)&&(Q=ri(a,c));let ee=0;if(s.length>0){const P=s[0],_=new se(Pe(P));_.skipBits(16),h(_),h(_),_.skipBits(1),_.skipBits(1),_.skipBits(3),_.skipBits(1),_.skipBits(1),h(_),h(_),re(_),_.skipBits(1),_.skipBits(1),_.readBits(1)&&h(_),re(_),re(_),_.skipBits(1),_.skipBits(1),_.skipBits(1),_.skipBits(1);const fe=_.readBits(1),pe=_.readBits(1);!fe&&!pe?ee=0:fe&&!pe?ee=2:!fe&&pe?ee=3:ee=0}const Tt=[...i.length?[{arrayCompleteness:1,nalUnitType:qe,nalUnits:i}]:[],...r.length?[{arrayCompleteness:1,nalUnitType:Qe,nalUnits:r}]:[],...s.length?[{arrayCompleteness:1,nalUnitType:Ge,nalUnits:s}]:[],...n.length?[{arrayCompleteness:1,nalUnitType:G(n[0]),nalUnits:n}]:[]];return{configurationVersion:1,generalProfileSpace:d,generalTierFlag:w,generalProfileIdc:v,generalProfileCompatibilityFlags:g,generalConstraintIndicatorFlags:y,generalLevelIdc:E,minSpatialSegmentationIdc:Q,parallelismType:ee,chromaFormatIdc:A,bitDepthLumaMinus8:q,bitDepthChromaMinus8:ae,avgFrameRate:0,constantFrameRate:0,numTemporalLayers:c+1,temporalIdNested:l,lengthSizeMinusOne:3,arrays:Tt}}catch(e){return console.error("Error building HEVC Decoder Configuration Record:",e),null}},Dt=(t,e)=>{const i=t.readBits(2),r=t.readBits(1),s=t.readBits(5);let n=0;for(let d=0;d<32;d++)n=n<<1|t.readBits(1);const o=new Uint8Array(6);for(let d=0;d<6;d++)o[d]=t.readBits(8);const a=t.readBits(8),c=[],l=[];for(let d=0;d<e;d++)c.push(t.readBits(1)),l.push(t.readBits(1));if(e>0)for(let d=e;d<8;d++)t.skipBits(2);for(let d=0;d<e;d++)c[d]&&t.skipBits(88),l[d]&&t.skipBits(8);return{general_profile_space:i,general_tier_flag:r,general_profile_idc:s,general_profile_compatibility_flags:n,general_constraint_indicator_flags:o,general_level_idc:a}},ei=t=>{for(let e=0;e<4;e++)for(let i=0;i<(e===3?2:6);i++)if(!t.readBits(1))h(t);else{const s=Math.min(64,1<<4+(e<<1));e>1&&re(t);for(let n=0;n<s;n++)re(t)}},ti=(t,e)=>{const i=[];for(let r=0;r<e;r++)i[r]=ii(t,r,e,i)},ii=(t,e,i,r)=>{let s=0,n=0,o=0;if(e!==0&&(n=t.readBits(1)),n){if(e===i){const c=h(t);o=e-(c+1)}else o=e-1;t.readBits(1),h(t);const a=r[o]??0;for(let c=0;c<=a;c++)t.readBits(1)||t.readBits(1);s=r[o]}else{const a=h(t),c=h(t);for(let l=0;l<a;l++)h(t),t.readBits(1);for(let l=0;l<c;l++)h(t),t.readBits(1);s=a+c}return s},ri=(t,e)=>{if(t.readBits(1)&&t.readBits(8)===255&&(t.readBits(16),t.readBits(16)),t.readBits(1)&&t.readBits(1),t.readBits(1)&&(t.readBits(3),t.readBits(1),t.readBits(1)&&(t.readBits(8),t.readBits(8),t.readBits(8))),t.readBits(1)&&(h(t),h(t)),t.readBits(1),t.readBits(1),t.readBits(1),t.readBits(1)&&(h(t),h(t),h(t),h(t)),t.readBits(1)&&(t.readBits(32),t.readBits(32),t.readBits(1)&&h(t),t.readBits(1)&&si(t,!0,e)),t.readBits(1)){t.readBits(1),t.readBits(1),t.readBits(1);const i=h(t);return h(t),h(t),h(t),h(t),i}return 0},si=(t,e,i)=>{let r=!1,s=!1,n=!1;r=t.readBits(1)===1,s=t.readBits(1)===1,(r||s)&&(n=t.readBits(1)===1,n&&(t.readBits(8),t.readBits(5),t.readBits(1),t.readBits(5)),t.readBits(4),t.readBits(4),n&&t.readBits(4),t.readBits(5),t.readBits(5),t.readBits(5));for(let o=0;o<=i;o++){const a=t.readBits(1)===1;let c=!0;a||(c=t.readBits(1)===1);let l=!1;c?h(t):l=t.readBits(1)===1;let d=1;l||(d=h(t)+1),r&&Ke(t,d,n),s&&Ke(t,d,n)}},Ke=(t,e,i)=>{for(let r=0;r<e;r++)h(t),h(t),i&&(h(t),h(t)),t.readBits(1)},ni=t=>{const e=[];e.push(t.configurationVersion),e.push((t.generalProfileSpace&3)<<6|(t.generalTierFlag&1)<<5|t.generalProfileIdc&31),e.push(t.generalProfileCompatibilityFlags>>>24&255),e.push(t.generalProfileCompatibilityFlags>>>16&255),e.push(t.generalProfileCompatibilityFlags>>>8&255),e.push(t.generalProfileCompatibilityFlags&255),e.push(...t.generalConstraintIndicatorFlags),e.push(t.generalLevelIdc&255),e.push(240|t.minSpatialSegmentationIdc>>8&15),e.push(t.minSpatialSegmentationIdc&255),e.push(252|t.parallelismType&3),e.push(252|t.chromaFormatIdc&3),e.push(248|t.bitDepthLumaMinus8&7),e.push(248|t.bitDepthChromaMinus8&7),e.push(t.avgFrameRate>>8&255),e.push(t.avgFrameRate&255),e.push((t.constantFrameRate&3)<<6|(t.numTemporalLayers&7)<<3|(t.temporalIdNested&1)<<2|t.lengthSizeMinusOne&3),e.push(t.arrays.length&255);for(const i of t.arrays){e.push((i.arrayCompleteness&1)<<7|0|i.nalUnitType&63),e.push(i.nalUnits.length>>8&255),e.push(i.nalUnits.length&255);for(const r of i.nalUnits){e.push(r.length>>8&255),e.push(r.length&255);for(let s=0;s<r.length;s++)e.push(r[s])}}return new Uint8Array(e)},oi=t=>{const e=St(t),i=e.getUint8(9),r=e.getUint16(10,!0),s=e.getUint32(12,!0),n=e.getInt16(16,!0),o=e.getUint8(18);let a=null;return o&&(a=t.subarray(19,21+i)),{outputChannelCount:i,preSkip:r,inputSampleRate:s,outputGain:n,channelMappingFamily:o,channelMappingTable:a}};/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */class Xe{constructor(e){this.writer=e,this.helper=new Uint8Array(8),this.helperView=new DataView(this.helper.buffer),this.offsets=new WeakMap}writeU32(e){this.helperView.setUint32(0,e,!1),this.writer.write(this.helper.subarray(0,4))}writeU64(e){this.helperView.setUint32(0,Math.floor(e/2**32),!1),this.helperView.setUint32(4,e,!1),this.writer.write(this.helper.subarray(0,8))}writeAscii(e){for(let i=0;i<e.length;i++)this.helperView.setUint8(i%8,e.charCodeAt(i)),i%8===7&&this.writer.write(this.helper);e.length%8!==0&&this.writer.write(this.helper.subarray(0,e.length%8))}writeBox(e){if(this.offsets.set(e,this.writer.getPos()),e.contents&&!e.children)this.writeBoxHeader(e,e.size??e.contents.byteLength+8),this.writer.write(e.contents);else{const i=this.writer.getPos();if(this.writeBoxHeader(e,0),e.contents&&this.writer.write(e.contents),e.children)for(const n of e.children)n&&this.writeBox(n);const r=this.writer.getPos(),s=e.size??r-i;this.writer.seek(i),this.writeBoxHeader(e,s),this.writer.seek(r)}}writeBoxHeader(e,i){this.writeU32(e.largeSize?1:i),this.writeAscii(e.type),e.largeSize&&this.writeU64(i)}measureBoxHeader(e){return 8+(e.largeSize?8:0)}patchBox(e){const i=this.offsets.get(e);m(i!==void 0);const r=this.writer.getPos();this.writer.seek(i),this.writeBox(e),this.writer.seek(r)}measureBox(e){if(e.contents&&!e.children)return this.measureBoxHeader(e)+e.contents.byteLength;{let i=this.measureBoxHeader(e);if(e.contents&&(i+=e.contents.byteLength),e.children)for(const r of e.children)r&&(i+=this.measureBox(r));return i}}}const C=new Uint8Array(8),O=new DataView(C.buffer),S=t=>[(t%256+256)%256],p=t=>(O.setUint16(0,t,!1),[C[0],C[1]]),nt=t=>(O.setInt16(0,t,!1),[C[0],C[1]]),ot=t=>(O.setUint32(0,t,!1),[C[1],C[2],C[3]]),u=t=>(O.setUint32(0,t,!1),[C[0],C[1],C[2],C[3]]),L=t=>(O.setInt32(0,t,!1),[C[0],C[1],C[2],C[3]]),j=t=>(O.setUint32(0,Math.floor(t/2**32),!1),O.setUint32(4,t,!1),[C[0],C[1],C[2],C[3],C[4],C[5],C[6],C[7]]),at=t=>(O.setInt16(0,2**8*t,!1),[C[0],C[1]]),W=t=>(O.setInt32(0,2**16*t,!1),[C[0],C[1],C[2],C[3]]),we=t=>(O.setInt32(0,2**30*t,!1),[C[0],C[1],C[2],C[3]]),ye=(t,e)=>{const i=[];let r=t;do{let s=r&127;r>>=7,i.length>0&&(s|=128),i.push(s)}while(r>0||e);return i.reverse()},M=(t,e=!1)=>{const i=Array(t.length).fill(null).map((r,s)=>t.charCodeAt(s));return e&&i.push(0),i},Ie=t=>{let e=null;for(const i of t)(!e||i.timestamp>e.timestamp)&&(e=i);return e},ct=t=>{const e=t*(Math.PI/180),i=Math.round(Math.cos(e)),r=Math.round(Math.sin(e));return[i,r,0,-r,i,0,0,0,1]},lt=ct(0),dt=t=>[W(t[0]),W(t[1]),we(t[2]),W(t[3]),W(t[4]),we(t[5]),W(t[6]),W(t[7]),we(t[8])],b=(t,e,i)=>({type:t,contents:e&&new Uint8Array(e.flat(10)),children:i}),T=(t,e,i,r,s)=>b(t,[S(e),ot(i),r??[]],s),ai=t=>t.isQuickTime?b("ftyp",[M("qt  "),u(512),M("qt  ")]):t.fragmented?b("ftyp",[M("iso5"),u(512),M("iso5"),M("iso6"),M("mp41")]):b("ftyp",[M("isom"),u(512),M("isom"),t.holdsAvc?M("avc1"):[],M("mp41")]),be=t=>({type:"mdat",largeSize:t}),ce=(t,e,i=!1)=>b("moov",void 0,[ci(e,t),...t.map(r=>li(r,e)),i?qi(t):null]),ci=(t,e)=>{const i=k(Math.max(0,...e.filter(o=>o.samples.length>0).map(o=>{const a=Ie(o.samples);return a.timestamp+a.duration})),Me),r=Math.max(0,...e.map(o=>o.track.id))+1,s=!Z(t)||!Z(i),n=s?j:u;return T("mvhd",+s,0,[n(t),n(t),u(Me),n(i),W(1),at(1),Array(10).fill(0),dt(lt),Array(24).fill(0),u(r)])},li=(t,e)=>b("trak",void 0,[di(t,e),ui(t,e)]),di=(t,e)=>{const i=Ie(t.samples),r=k(i?i.timestamp+i.duration:0,Me),s=!Z(e)||!Z(r),n=s?j:u;let o;if(t.type==="video"){const a=t.track.metadata.rotation;o=ct(a??0)}else o=lt;return T("tkhd",+s,3,[n(e),n(e),u(t.track.id),u(0),n(r),Array(8).fill(0),p(0),p(t.track.id),at(t.type==="audio"?1:0),p(0),dt(o),W(t.type==="video"?t.info.width:0),W(t.type==="video"?t.info.height:0)])},ui=(t,e)=>b("mdia",void 0,[hi(t,e),pi(t),gi(t)]),hi=(t,e)=>{const i=Ie(t.samples),r=k(i?i.timestamp+i.duration:0,t.timescale),s=!Z(e)||!Z(r),n=s?j:u;let o=0;for(const a of t.track.metadata.languageCode??Bt)o<<=5,o+=a.charCodeAt(0)-96;return T("mdhd",+s,0,[n(e),n(e),u(t.timescale),n(r),p(o),p(0)])},mi={video:"vide",audio:"soun",subtitle:"text"},fi={video:"MediabunnyVideoHandler",audio:"MediabunnySoundHandler",subtitle:"MediabunnyTextHandler"},pi=t=>T("hdlr",0,0,[M("mhlr"),M(mi[t.type]),u(0),u(0),u(0),M(fi[t.type],!0)]),gi=t=>b("minf",void 0,[vi[t.type](),Ci(),_i(t)]),wi=()=>T("vmhd",0,1,[p(0),p(0),p(0),p(0)]),yi=()=>T("smhd",0,0,[p(0),p(0)]),bi=()=>T("nmhd",0,0),vi={video:wi,audio:yi,subtitle:bi},Ci=()=>b("dinf",void 0,[Ti()]),Ti=()=>T("dref",0,0,[u(1)],[xi()]),xi=()=>T("url ",0,1),_i=t=>{const e=t.compositionTimeOffsetTable.length>1||t.compositionTimeOffsetTable.some(i=>i.sampleCompositionTimeOffset!==0);return b("stbl",void 0,[Si(t),Ui(t),e?Hi(t):null,e?ji(t):null,Ni(t),Ri(t),$i(t),Li(t)])},Si=t=>{let e;if(t.type==="video")e=Ei(sr[t.track.source._codec],t);else if(t.type==="audio"){const i=ht(t.track.source._codec,t.muxer.isQuickTime);m(i),e=Fi(i,t)}else t.type==="subtitle"&&(e=Oi(ar[t.track.source._codec],t));return m(e),T("stsd",0,0,[u(1)],[e])},Ei=(t,e)=>b(t,[Array(6).fill(0),p(1),p(0),p(0),Array(12).fill(0),p(e.info.width),p(e.info.height),u(4718592),u(4718592),u(0),p(1),Array(32).fill(0),p(24),nt(65535)],[nr[e.track.source._codec](e),Et(e.info.decoderConfig.colorSpace)?ki(e):null]),ki=t=>b("colr",[M("nclx"),p(ue[t.info.decoderConfig.colorSpace.primaries]),p(he[t.info.decoderConfig.colorSpace.transfer]),p(me[t.info.decoderConfig.colorSpace.matrix]),S((t.info.decoderConfig.colorSpace.fullRange?1:0)<<7)]),Bi=t=>t.info.decoderConfig&&b("avcC",[...N(t.info.decoderConfig.description)]),Pi=t=>t.info.decoderConfig&&b("hvcC",[...N(t.info.decoderConfig.description)]),Ye=t=>{if(!t.info.decoderConfig)return null;const e=t.info.decoderConfig,i=e.codec.split("."),r=Number(i[1]),s=Number(i[2]),n=Number(i[3]),o=i[4]?Number(i[4]):1,a=i[8]?Number(i[8]):Number(e.colorSpace?.fullRange??0),c=(n<<4)+(o<<1)+a,l=i[5]?Number(i[5]):e.colorSpace?.primaries?ue[e.colorSpace.primaries]:2,d=i[6]?Number(i[6]):e.colorSpace?.transfer?he[e.colorSpace.transfer]:2,w=i[7]?Number(i[7]):e.colorSpace?.matrix?me[e.colorSpace.matrix]:2;return T("vpcC",1,0,[S(r),S(s),S(c),S(l),S(d),S(w),p(0)])},Mi=t=>b("av1C",zt(t.info.decoderConfig.codec)),Fi=(t,e)=>{let i=0,r,s=16;if(H.includes(e.track.source._codec)){const n=e.track.source._codec,{sampleSize:o}=oe(n);s=8*o,s>16&&(i=1)}return i===0?r=[Array(6).fill(0),p(1),p(i),p(0),u(0),p(e.info.numberOfChannels),p(s),p(0),p(0),p(e.info.sampleRate<2**16?e.info.sampleRate:0),p(0)]:r=[Array(6).fill(0),p(1),p(i),p(0),u(0),p(e.info.numberOfChannels),p(Math.min(s,16)),p(0),p(0),p(e.info.sampleRate<2**16?e.info.sampleRate:0),p(0),u(1),u(s/8),u(e.info.numberOfChannels*s/8),u(2)],b(t,r,[or(e.track.source._codec,e.muxer.isQuickTime)?.(e)??null])},ve=t=>{let e;switch(t.track.source._codec){case"aac":e=64;break;case"mp3":e=107;break;case"vorbis":e=221;break;default:throw new Error(`Unhandled audio codec: ${t.track.source._codec}`)}let i=[...S(e),...S(21),...ot(0),...u(0),...u(0)];if(t.info.decoderConfig.description){const r=N(t.info.decoderConfig.description);i=[...i,...S(5),...ye(r.byteLength),...r]}return i=[...p(1),...S(0),...S(4),...ye(i.length),...i,...S(6),...S(1),...S(2)],i=[...S(3),...ye(i.length),...i],T("esds",0,0,i)},U=t=>b("wave",void 0,[Ai(t),zi(t),b("\0\0\0\0")]),Ai=t=>b("frma",[M(ht(t.track.source._codec,t.muxer.isQuickTime))]),zi=t=>{const{littleEndian:e}=oe(t.track.source._codec);return b("enda",[p(+e)])},Ii=t=>{let e=t.info.numberOfChannels,i=3840,r=t.info.sampleRate,s=0,n=0,o=new Uint8Array(0);const a=t.info.decoderConfig?.description;if(a){m(a.byteLength>=18);const c=N(a),l=oi(c);e=l.outputChannelCount,i=l.preSkip,r=l.inputSampleRate,s=l.outputGain,n=l.channelMappingFamily,l.channelMappingTable&&(o=l.channelMappingTable)}return b("dOps",[S(0),S(e),p(i),u(r),nt(s),S(n),...o])},Vi=t=>{const e=t.info.decoderConfig?.description;m(e);const i=N(e);return T("dfLa",0,0,[...i.subarray(4)])},I=t=>{const{littleEndian:e,sampleSize:i}=oe(t.track.source._codec),r=+e;return T("pcmC",0,0,[S(r),S(8*i)])},Oi=(t,e)=>b(t,[Array(6).fill(0),p(1)],[cr[e.track.source._codec](e)]),Wi=t=>b("vttC",[...K.encode(t.info.config.description)]),Ui=t=>T("stts",0,0,[u(t.timeToSampleTable.length),t.timeToSampleTable.map(e=>[u(e.sampleCount),u(e.sampleDelta)])]),Li=t=>{if(t.samples.every(i=>i.type==="key"))return null;const e=[...t.samples.entries()].filter(([,i])=>i.type==="key");return T("stss",0,0,[u(e.length),e.map(([i])=>u(i+1))])},Ni=t=>T("stsc",0,0,[u(t.compactlyCodedChunkTable.length),t.compactlyCodedChunkTable.map(e=>[u(e.firstChunk),u(e.samplesPerChunk),u(1)])]),Ri=t=>{if(t.type==="audio"&&t.info.requiresPcmTransformation){const{sampleSize:e}=oe(t.track.source._codec);return T("stsz",0,0,[u(e*t.info.numberOfChannels),u(t.samples.reduce((i,r)=>i+k(r.duration,t.timescale),0))])}return T("stsz",0,0,[u(0),u(t.samples.length),t.samples.map(e=>u(e.size))])},$i=t=>t.finalizedChunks.length>0&&V(t.finalizedChunks).offset>=2**32?T("co64",0,0,[u(t.finalizedChunks.length),t.finalizedChunks.map(e=>j(e.offset))]):T("stco",0,0,[u(t.finalizedChunks.length),t.finalizedChunks.map(e=>u(e.offset))]),Hi=t=>T("ctts",1,0,[u(t.compositionTimeOffsetTable.length),t.compositionTimeOffsetTable.map(e=>[u(e.sampleCount),L(e.sampleCompositionTimeOffset)])]),ji=t=>{let e=1/0,i=-1/0,r=1/0,s=-1/0;m(t.compositionTimeOffsetTable.length>0),m(t.samples.length>0);for(let o=0;o<t.compositionTimeOffsetTable.length;o++){const a=t.compositionTimeOffsetTable[o];e=Math.min(e,a.sampleCompositionTimeOffset),i=Math.max(i,a.sampleCompositionTimeOffset)}for(let o=0;o<t.samples.length;o++){const a=t.samples[o];r=Math.min(r,k(a.timestamp,t.timescale)),s=Math.max(s,k(a.timestamp+a.duration,t.timescale))}const n=Math.max(-e,0);return s>=2**31?null:T("cslg",0,0,[L(n),L(e),L(i),L(r),L(s)])},qi=t=>b("mvex",void 0,t.map(Qi)),Qi=t=>T("trex",0,0,[u(t.track.id),u(1),u(0),u(0),u(0)]),Ze=(t,e)=>b("moof",void 0,[Gi(t),...e.map(Ki)]),Gi=t=>T("mfhd",0,0,[u(t)]),ut=t=>{let e=0,i=0;const r=0,s=0,n=t.type==="delta";return i|=+n,n?e|=1:e|=2,e<<24|i<<16|r<<8|s},Ki=t=>b("traf",void 0,[Xi(t),Yi(t),Zi(t)]),Xi=t=>{m(t.currentChunk);let e=0;e|=8,e|=16,e|=32,e|=131072;const i=t.currentChunk.samples[1]??t.currentChunk.samples[0],r={duration:i.timescaleUnitsToNextSample,size:i.size,flags:ut(i)};return T("tfhd",0,e,[u(t.track.id),u(r.duration),u(r.size),u(r.flags)])},Yi=t=>(m(t.currentChunk),T("tfdt",1,0,[j(k(t.currentChunk.startTimestamp,t.timescale))])),Zi=t=>{m(t.currentChunk);const e=t.currentChunk.samples.map(E=>E.timescaleUnitsToNextSample),i=t.currentChunk.samples.map(E=>E.size),r=t.currentChunk.samples.map(ut),s=t.currentChunk.samples.map(E=>k(E.timestamp-E.decodeTimestamp,t.timescale)),n=new Set(e),o=new Set(i),a=new Set(r),c=new Set(s),l=a.size===2&&r[0]!==r[1],d=n.size>1,w=o.size>1,v=!l&&a.size>1,g=c.size>1||[...c].some(E=>E!==0);let y=0;return y|=1,y|=4*+l,y|=256*+d,y|=512*+w,y|=1024*+v,y|=2048*+g,T("trun",1,y,[u(t.currentChunk.samples.length),u(t.currentChunk.offset-t.currentChunk.moofOffset||0),l?u(r[0]):[],t.currentChunk.samples.map((E,A)=>[d?u(e[A]):[],w?u(i[A]):[],v?u(r[A]):[],g?L(s[A]):[]])])},Ji=t=>b("mfra",void 0,[...t.map(Di),er()]),Di=(t,e)=>T("tfra",1,0,[u(t.track.id),u(63),u(t.finalizedChunks.length),t.finalizedChunks.map(r=>[j(k(r.samples[0].timestamp,t.timescale)),j(r.moofOffset),u(e+1),u(1),u(1)])]),er=()=>T("mfro",0,0,[u(0)]),tr=()=>b("vtte"),ir=(t,e,i,r,s)=>b("vttc",void 0,[s!==null?b("vsid",[L(s)]):null,i!==null?b("iden",[...K.encode(i)]):null,e!==null?b("ctim",[...K.encode(Qt(e))]):null,r!==null?b("sttg",[...K.encode(r)]):null,b("payl",[...K.encode(t)])]),rr=t=>b("vtta",[...K.encode(t)]),sr={avc:"avc1",hevc:"hvc1",vp8:"vp08",vp9:"vp09",av1:"av01"},nr={avc:Bi,hevc:Pi,vp8:Ye,vp9:Ye,av1:Mi},ht=(t,e)=>{switch(t){case"aac":return"mp4a";case"mp3":return"mp4a";case"opus":return"Opus";case"vorbis":return"mp4a";case"flac":return"fLaC";case"ulaw":return"ulaw";case"alaw":return"alaw";case"pcm-u8":return"raw ";case"pcm-s8":return"sowt"}if(e)switch(t){case"pcm-s16":return"sowt";case"pcm-s16be":return"twos";case"pcm-s24":return"in24";case"pcm-s24be":return"in24";case"pcm-s32":return"in32";case"pcm-s32be":return"in32";case"pcm-f32":return"fl32";case"pcm-f32be":return"fl32";case"pcm-f64":return"fl64";case"pcm-f64be":return"fl64"}else switch(t){case"pcm-s16":return"ipcm";case"pcm-s16be":return"ipcm";case"pcm-s24":return"ipcm";case"pcm-s24be":return"ipcm";case"pcm-s32":return"ipcm";case"pcm-s32be":return"ipcm";case"pcm-f32":return"fpcm";case"pcm-f32be":return"fpcm";case"pcm-f64":return"fpcm";case"pcm-f64be":return"fpcm"}},or=(t,e)=>{switch(t){case"aac":return ve;case"mp3":return ve;case"opus":return Ii;case"vorbis":return ve;case"flac":return Vi}if(e)switch(t){case"pcm-s24":return U;case"pcm-s24be":return U;case"pcm-s32":return U;case"pcm-s32be":return U;case"pcm-f32":return U;case"pcm-f32be":return U;case"pcm-f64":return U;case"pcm-f64be":return U}else switch(t){case"pcm-s16":return I;case"pcm-s16be":return I;case"pcm-s24":return I;case"pcm-s24be":return I;case"pcm-s32":return I;case"pcm-s32be":return I;case"pcm-f32":return I;case"pcm-f32be":return I;case"pcm-f64":return I;case"pcm-f64be":return I}return null},ar={webvtt:"wvtt"},cr={webvtt:Wi};/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */class lr{constructor(e){this.mutex=new tt,this.firstMediaStreamTimestamp=null,this.trackTimestampInfo=new WeakMap,this.output=e}onTrackClose(e){}validateAndNormalizeTimestamp(e,i,r){i+=e.source._timestampOffset;let s=this.trackTimestampInfo.get(e);if(!s){if(!r)throw new Error("First frame must be a key frame.");s={maxTimestamp:i,maxTimestampBeforeLastKeyFrame:i},this.trackTimestampInfo.set(e,s)}if(i<0)throw new Error(`Timestamps must be non-negative (got ${i}s).`);if(r&&(s.maxTimestampBeforeLastKeyFrame=s.maxTimestamp),i<s.maxTimestampBeforeLastKeyFrame)throw new Error(`Timestamps cannot be smaller than the highest timestamp of the previous run (a run begins with a key frame and ends right before the next key frame). Got ${i}s, but highest timestamp is ${s.maxTimestampBeforeLastKeyFrame}s.`);return s.maxTimestamp=Math.max(s.maxTimestamp,i),i}}/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */class mt{constructor(){this.ensureMonotonicity=!1,this.trackedWrites=null,this.trackedStart=-1,this.trackedEnd=-1}start(){}maybeTrackWrites(e){if(!this.trackedWrites)return;let i=this.getPos();if(i<this.trackedStart){if(i+e.byteLength<=this.trackedStart)return;e=e.subarray(this.trackedStart-i),i=0}const r=i+e.byteLength-this.trackedStart;let s=this.trackedWrites.byteLength;for(;s<r;)s*=2;if(s!==this.trackedWrites.byteLength){const n=new Uint8Array(s);n.set(this.trackedWrites,0),this.trackedWrites=n}this.trackedWrites.set(e,i-this.trackedStart),this.trackedEnd=Math.max(this.trackedEnd,i+e.byteLength)}startTrackingWrites(){this.trackedWrites=new Uint8Array(2**10),this.trackedStart=this.getPos(),this.trackedEnd=this.trackedStart}stopTrackingWrites(){if(!this.trackedWrites)throw new Error("Internal error: Can't get tracked writes since nothing was tracked.");const i={data:this.trackedWrites.subarray(0,this.trackedEnd-this.trackedStart),start:this.trackedStart,end:this.trackedEnd};return this.trackedWrites=null,i}}const Ce=2**16,Te=2**32;class ft extends mt{constructor(e){if(super(),this.pos=0,this.maxPos=0,this.target=e,this.supportsResize="resize"in new ArrayBuffer(0),this.supportsResize)try{this.buffer=new ArrayBuffer(Ce,{maxByteLength:Te})}catch{this.buffer=new ArrayBuffer(Ce),this.supportsResize=!1}else this.buffer=new ArrayBuffer(Ce);this.bytes=new Uint8Array(this.buffer)}ensureSize(e){let i=this.buffer.byteLength;for(;i<e;)i*=2;if(i!==this.buffer.byteLength){if(i>Te)throw new Error(`ArrayBuffer exceeded maximum size of ${Te} bytes. Please consider using another target.`);if(this.supportsResize)this.buffer.resize(i);else{const r=new ArrayBuffer(i),s=new Uint8Array(r);s.set(this.bytes,0),this.buffer=r,this.bytes=s}}}write(e){this.maybeTrackWrites(e),this.ensureSize(this.pos+e.byteLength),this.bytes.set(e,this.pos),this.pos+=e.byteLength,this.maxPos=Math.max(this.maxPos,this.pos)}seek(e){this.pos=e}getPos(){return this.pos}async flush(){}async finalize(){this.ensureSize(this.pos),this.target.buffer=this.buffer.slice(0,Math.max(this.maxPos,this.pos))}async close(){}getSlice(e,i){return this.bytes.slice(e,i)}}const dr=2**24,ur=2;class hr extends mt{constructor(e){super(),this.pos=0,this.sections=[],this.lastWriteEnd=0,this.lastFlushEnd=0,this.writer=null,this.chunks=[],this.target=e,this.chunked=e._options.chunked??!1,this.chunkSize=e._options.chunkSize??dr}start(){this.writer=this.target._writable.getWriter()}write(e){if(this.pos>this.lastWriteEnd){const i=this.pos-this.lastWriteEnd;this.pos=this.lastWriteEnd,this.write(new Uint8Array(i))}this.maybeTrackWrites(e),this.sections.push({data:e.slice(),start:this.pos}),this.pos+=e.byteLength,this.lastWriteEnd=Math.max(this.lastWriteEnd,this.pos)}seek(e){this.pos=e}getPos(){return this.pos}async flush(){if(this.pos>this.lastWriteEnd){const r=this.pos-this.lastWriteEnd;this.pos=this.lastWriteEnd,this.write(new Uint8Array(r))}if(m(this.writer),this.sections.length===0)return;const e=[],i=[...this.sections].sort((r,s)=>r.start-s.start);e.push({start:i[0].start,size:i[0].data.byteLength});for(let r=1;r<i.length;r++){const s=e[e.length-1],n=i[r];n.start<=s.start+s.size?s.size=Math.max(s.size,n.start+n.data.byteLength-s.start):e.push({start:n.start,size:n.data.byteLength})}for(const r of e){r.data=new Uint8Array(r.size);for(const s of this.sections)r.start<=s.start&&s.start<r.start+r.size&&r.data.set(s.data,s.start-r.start);if(this.writer.desiredSize!==null&&this.writer.desiredSize<=0&&await this.writer.ready,this.chunked)this.writeDataIntoChunks(r.data,r.start),this.tryToFlushChunks();else{if(this.ensureMonotonicity&&r.start!==this.lastFlushEnd)throw new Error("Internal error: Monotonicity violation.");this.writer.write({type:"write",data:r.data,position:r.start}),this.lastFlushEnd=r.start+r.data.byteLength}}this.sections.length=0}writeDataIntoChunks(e,i){let r=this.chunks.findIndex(c=>c.start<=i&&i<c.start+this.chunkSize);r===-1&&(r=this.createChunk(i));const s=this.chunks[r],n=i-s.start,o=e.subarray(0,Math.min(this.chunkSize-n,e.byteLength));s.data.set(o,n);const a={start:n,end:n+o.byteLength};if(this.insertSectionIntoChunk(s,a),s.written[0].start===0&&s.written[0].end===this.chunkSize&&(s.shouldFlush=!0),this.chunks.length>ur){for(let c=0;c<this.chunks.length-1;c++)this.chunks[c].shouldFlush=!0;this.tryToFlushChunks()}o.byteLength<e.byteLength&&this.writeDataIntoChunks(e.subarray(o.byteLength),i+o.byteLength)}insertSectionIntoChunk(e,i){let r=0,s=e.written.length-1,n=-1;for(;r<=s;){const o=Math.floor(r+(s-r+1)/2);e.written[o].start<=i.start?(r=o+1,n=o):s=o-1}for(e.written.splice(n+1,0,i),(n===-1||e.written[n].end<i.start)&&n++;n<e.written.length-1&&e.written[n].end>=e.written[n+1].start;)e.written[n].end=Math.max(e.written[n].end,e.written[n+1].end),e.written.splice(n+1,1)}createChunk(e){const r={start:Math.floor(e/this.chunkSize)*this.chunkSize,data:new Uint8Array(this.chunkSize),written:[],shouldFlush:!1};return this.chunks.push(r),this.chunks.sort((s,n)=>s.start-n.start),this.chunks.indexOf(r)}tryToFlushChunks(e=!1){m(this.writer);for(let i=0;i<this.chunks.length;i++){const r=this.chunks[i];if(!(!r.shouldFlush&&!e)){for(const s of r.written){const n=r.start+s.start;if(this.ensureMonotonicity&&n!==this.lastFlushEnd)throw new Error("Internal error: Monotonicity violation.");this.writer.write({type:"write",data:r.data.subarray(s.start,s.end),position:n}),this.lastFlushEnd=r.start+s.end}this.chunks.splice(i--,1)}}}finalize(){return this.chunked&&this.tryToFlushChunks(!0),m(this.writer),this.writer.close()}async close(){return this.writer?.close()}}/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */class Ve{constructor(){this._output=null}}class pt extends Ve{constructor(){super(...arguments),this.buffer=null}_createWriter(){return new ft(this)}}class mr extends Ve{constructor(e,i={}){if(super(),!(e instanceof WritableStream))throw new TypeError("StreamTarget requires a WritableStream instance.");if(i!=null&&typeof i!="object")throw new TypeError("StreamTarget options, when provided, must be an object.");if(i.chunked!==void 0&&typeof i.chunked!="boolean")throw new TypeError("options.chunked, when provided, must be a boolean.");if(i.chunkSize!==void 0&&(!Number.isInteger(i.chunkSize)||i.chunkSize<1024))throw new TypeError("options.chunkSize, when provided, must be an integer and not smaller than 1024.");this._writable=e,this._options=i}_createWriter(){return new hr(this)}}/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */const fr=t=>{let i=(t.hasVideo?"video/":t.hasAudio?"audio/":"application/")+(t.isQuickTime?"quicktime":"mp4");if(t.codecStrings.length>0){const r=[...new Set(t.codecStrings)];i+=`; codecs="${r.join(", ")}"`}return i};/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */const Me=1e3,pr=2082844800,k=(t,e,i=!0)=>{const r=t*e;return i?Math.round(r):r};class gr extends lr{constructor(e,i){super(e),this.auxTarget=new pt,this.auxWriter=this.auxTarget._createWriter(),this.auxBoxWriter=new Xe(this.auxWriter),this.mdat=null,this.trackDatas=[],this.allTracksKnown=kt(),this.creationTime=Math.floor(Date.now()/1e3)+pr,this.finalizedChunks=[],this.nextFragmentNumber=1,this.maxWrittenTimestamp=-1/0,this.format=i,this.writer=e._writer,this.boxWriter=new Xe(this.writer),this.isQuickTime=i instanceof yt;const r=this.writer instanceof ft?"in-memory":!1;this.fastStart=i._options.fastStart??r,this.isFragmented=this.fastStart==="fragmented",(this.fastStart==="in-memory"||this.isFragmented)&&(this.writer.ensureMonotonicity=!0),this.minimumFragmentDuration=i._options.minimumFragmentDuration??1}async start(){const e=await this.mutex.acquire(),i=this.output._tracks.some(r=>r.type==="video"&&r.source._codec==="avc");if(this.format._options.onFtyp&&this.writer.startTrackingWrites(),this.boxWriter.writeBox(ai({isQuickTime:this.isQuickTime,holdsAvc:i,fragmented:this.isFragmented})),this.format._options.onFtyp){const{data:r,start:s}=this.writer.stopTrackingWrites();this.format._options.onFtyp(r,s)}this.fastStart==="in-memory"?this.mdat=be(!1):this.isFragmented||(this.format._options.onMdat&&this.writer.startTrackingWrites(),this.mdat=be(!0),this.boxWriter.writeBox(this.mdat)),await this.writer.flush(),e()}allTracksAreKnown(){for(const e of this.output._tracks)if(!e.source._closed&&!this.trackDatas.some(i=>i.track===e))return!1;return!0}async getMimeType(){await this.allTracksKnown.promise;const e=this.trackDatas.map(i=>i.type==="video"||i.type==="audio"?i.info.decoderConfig.codec:{webvtt:"wvtt"}[i.track.source._codec]);return fr({isQuickTime:this.isQuickTime,hasVideo:this.trackDatas.some(i=>i.type==="video"),hasAudio:this.trackDatas.some(i=>i.type==="audio"),codecStrings:e})}getVideoTrackData(e,i,r){const s=this.trackDatas.find(l=>l.track===e);if(s)return s;Nt(r),m(r),m(r.decoderConfig);const n={...r.decoderConfig};m(n.codedWidth!==void 0),m(n.codedHeight!==void 0);let o=!1;if(e.source._codec==="avc"&&!n.description){const l=Kt(i.data);if(!l)throw new Error("Couldn't extract an AVCDecoderConfigurationRecord from the AVC packet. Make sure the packets are in Annex B format (as specified in ITU-T-REC-H.264) when not providing a description, or provide a description (must be an AVCDecoderConfigurationRecord as specified in ISO 14496-15) and ensure the packets are in AVCC format.");n.description=Xt(l),o=!0}else if(e.source._codec==="hevc"&&!n.description){const l=Jt(i.data);if(!l)throw new Error("Couldn't extract an HEVCDecoderConfigurationRecord from the HEVC packet. Make sure the packets are in Annex B format (as specified in ITU-T-REC-H.265) when not providing a description, or provide a description (must be an HEVCDecoderConfigurationRecord as specified in ISO 14496-15) and ensure the packets are in HEVC format.");n.description=ni(l),o=!0}const a=Ft(1/(e.metadata.frameRate??57600),1e6).denominator,c={muxer:this,track:e,type:"video",info:{width:n.codedWidth,height:n.codedHeight,decoderConfig:n,requiresAnnexBTransformation:o},timescale:a,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[]};return this.trackDatas.push(c),this.trackDatas.sort((l,d)=>l.track.id-d.track.id),this.allTracksAreKnown()&&this.allTracksKnown.resolve(),c}getAudioTrackData(e,i){const r=this.trackDatas.find(n=>n.track===e);if(r)return r;$t(i),m(i),m(i.decoderConfig);const s={muxer:this,track:e,type:"audio",info:{numberOfChannels:i.decoderConfig.numberOfChannels,sampleRate:i.decoderConfig.sampleRate,decoderConfig:i.decoderConfig,requiresPcmTransformation:!this.isFragmented&&H.includes(e.source._codec)},timescale:i.decoderConfig.sampleRate,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[]};return this.trackDatas.push(s),this.trackDatas.sort((n,o)=>n.track.id-o.track.id),this.allTracksAreKnown()&&this.allTracksKnown.resolve(),s}getSubtitleTrackData(e,i){const r=this.trackDatas.find(n=>n.track===e);if(r)return r;Ht(i),m(i),m(i.config);const s={muxer:this,track:e,type:"subtitle",info:{config:i.config},timescale:1e3,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[],lastCueEndTimestamp:0,cueQueue:[],nextSourceId:0,cueToSourceId:new WeakMap};return this.trackDatas.push(s),this.trackDatas.sort((n,o)=>n.track.id-o.track.id),this.allTracksAreKnown()&&this.allTracksKnown.resolve(),s}async addEncodedVideoPacket(e,i,r){const s=await this.mutex.acquire();try{const n=this.getVideoTrackData(e,i,r);let o=i.data;if(n.info.requiresAnnexBTransformation){const l=Gt(o);if(!l)throw new Error("Failed to transform packet data. Make sure all packets are provided in Annex B format, as specified in ITU-T-REC-H.264 and ITU-T-REC-H.265.");o=l}const a=this.validateAndNormalizeTimestamp(n.track,i.timestamp,i.type==="key"),c=this.createSampleForTrack(n,o,a,i.duration,i.type);await this.registerSample(n,c)}finally{s()}}async addEncodedAudioPacket(e,i,r){const s=await this.mutex.acquire();try{const n=this.getAudioTrackData(e,r),o=this.validateAndNormalizeTimestamp(n.track,i.timestamp,i.type==="key"),a=this.createSampleForTrack(n,i.data,o,i.duration,i.type);n.info.requiresPcmTransformation&&await this.maybePadWithSilence(n,o),await this.registerSample(n,a)}finally{s()}}async maybePadWithSilence(e,i){const r=V(e.samples),s=r?r.timestamp+r.duration:0,n=i-s,o=k(n,e.timescale);if(o>0){const{sampleSize:a,silentValue:c}=oe(e.info.decoderConfig.codec),l=o*e.info.numberOfChannels,d=new Uint8Array(a*l).fill(c),w=this.createSampleForTrack(e,new Uint8Array(d.buffer),s,n,"key");await this.registerSample(e,w)}}async addSubtitleCue(e,i,r){const s=await this.mutex.acquire();try{const n=this.getSubtitleTrackData(e,r);this.validateAndNormalizeTimestamp(n.track,i.timestamp,!0),e.source._codec==="webvtt"&&(n.cueQueue.push(i),await this.processWebVTTCues(n,i.timestamp))}finally{s()}}async processWebVTTCues(e,i){for(;e.cueQueue.length>0;){const r=new Set([]);for(const l of e.cueQueue)m(l.timestamp<=i),m(e.lastCueEndTimestamp<=l.timestamp+l.duration),r.add(Math.max(l.timestamp,e.lastCueEndTimestamp)),r.add(l.timestamp+l.duration);const s=[...r].sort((l,d)=>l-d),n=s[0],o=s[1]??n;if(i<o)break;if(e.lastCueEndTimestamp<n){this.auxWriter.seek(0);const l=tr();this.auxBoxWriter.writeBox(l);const d=this.auxWriter.getSlice(0,this.auxWriter.getPos()),w=this.createSampleForTrack(e,d,e.lastCueEndTimestamp,n-e.lastCueEndTimestamp,"key");await this.registerSample(e,w),e.lastCueEndTimestamp=n}this.auxWriter.seek(0);for(let l=0;l<e.cueQueue.length;l++){const d=e.cueQueue[l];if(d.timestamp>=o)break;je.lastIndex=0;const w=je.test(d.text),v=d.timestamp+d.duration;let g=e.cueToSourceId.get(d);if(g===void 0&&o<v&&(g=e.nextSourceId++,e.cueToSourceId.set(d,g)),d.notes){const E=rr(d.notes);this.auxBoxWriter.writeBox(E)}const y=ir(d.text,w?n:null,d.identifier??null,d.settings??null,g??null);this.auxBoxWriter.writeBox(y),v===o&&e.cueQueue.splice(l--,1)}const a=this.auxWriter.getSlice(0,this.auxWriter.getPos()),c=this.createSampleForTrack(e,a,n,o-n,"key");await this.registerSample(e,c),e.lastCueEndTimestamp=o}}createSampleForTrack(e,i,r,s,n){return{timestamp:r,decodeTimestamp:r,duration:s,data:i,size:i.byteLength,type:n,timescaleUnitsToNextSample:k(s,e.timescale)}}processTimestamps(e,i){if(e.timestampProcessingQueue.length===0)return;if(e.type==="audio"&&e.info.requiresPcmTransformation){let s=0;for(let n=0;n<e.timestampProcessingQueue.length;n++){const o=e.timestampProcessingQueue[n],a=k(o.duration,e.timescale);s+=a}if(e.timeToSampleTable.length===0)e.timeToSampleTable.push({sampleCount:s,sampleDelta:1});else{const n=V(e.timeToSampleTable);n.sampleCount+=s}e.timestampProcessingQueue.length=0;return}const r=e.timestampProcessingQueue.map(s=>s.timestamp).sort((s,n)=>s-n);for(let s=0;s<e.timestampProcessingQueue.length;s++){const n=e.timestampProcessingQueue[s];n.decodeTimestamp=r[s],!this.isFragmented&&e.lastTimescaleUnits===null&&(n.decodeTimestamp=0);const o=k(n.timestamp-n.decodeTimestamp,e.timescale),a=k(n.duration,e.timescale);if(e.lastTimescaleUnits!==null){m(e.lastSample);const c=k(n.decodeTimestamp,e.timescale,!1),l=Math.round(c-e.lastTimescaleUnits);if(m(l>=0),e.lastTimescaleUnits+=l,e.lastSample.timescaleUnitsToNextSample=l,!this.isFragmented){let d=V(e.timeToSampleTable);if(m(d),d.sampleCount===1){d.sampleDelta=l;const v=e.timeToSampleTable[e.timeToSampleTable.length-2];v&&v.sampleDelta===l&&(v.sampleCount++,e.timeToSampleTable.pop(),d=v)}else d.sampleDelta!==l&&(d.sampleCount--,e.timeToSampleTable.push(d={sampleCount:1,sampleDelta:l}));d.sampleDelta===a?d.sampleCount++:e.timeToSampleTable.push({sampleCount:1,sampleDelta:a});const w=V(e.compositionTimeOffsetTable);m(w),w.sampleCompositionTimeOffset===o?w.sampleCount++:e.compositionTimeOffsetTable.push({sampleCount:1,sampleCompositionTimeOffset:o})}}else e.lastTimescaleUnits=k(n.decodeTimestamp,e.timescale,!1),this.isFragmented||(e.timeToSampleTable.push({sampleCount:1,sampleDelta:a}),e.compositionTimeOffsetTable.push({sampleCount:1,sampleCompositionTimeOffset:o}));e.lastSample=n}if(e.timestampProcessingQueue.length=0,m(e.lastSample),m(e.lastTimescaleUnits!==null),i!==void 0&&e.lastSample.timescaleUnitsToNextSample===0){m(i.type==="key");const s=k(i.timestamp,e.timescale,!1),n=Math.round(s-e.lastTimescaleUnits);e.lastSample.timescaleUnitsToNextSample=n}}async registerSample(e,i){i.type==="key"&&this.processTimestamps(e,i),e.timestampProcessingQueue.push(i),this.isFragmented?(e.sampleQueue.push(i),await this.interleaveSamples()):await this.addSampleToTrack(e,i)}async addSampleToTrack(e,i){this.isFragmented||e.samples.push(i);let r=!1;if(!e.currentChunk)r=!0;else{e.currentChunk.startTimestamp=Math.min(e.currentChunk.startTimestamp,i.timestamp);const s=i.timestamp-e.currentChunk.startTimestamp;if(this.isFragmented){const n=this.trackDatas.every(o=>{if(e===o)return i.type==="key";const a=o.sampleQueue[0];return a?a.type==="key":o.track.source._closed});s>=this.minimumFragmentDuration&&n&&i.timestamp>this.maxWrittenTimestamp&&(r=!0,await this.finalizeFragment())}else r=s>=.5}r&&(e.currentChunk&&await this.finalizeCurrentChunk(e),e.currentChunk={startTimestamp:i.timestamp,samples:[],offset:null,moofOffset:null}),m(e.currentChunk),e.currentChunk.samples.push(i),this.isFragmented&&(this.maxWrittenTimestamp=Math.max(this.maxWrittenTimestamp,i.timestamp))}async finalizeCurrentChunk(e){if(m(!this.isFragmented),!e.currentChunk)return;e.finalizedChunks.push(e.currentChunk),this.finalizedChunks.push(e.currentChunk);let i=e.currentChunk.samples.length;if(e.type==="audio"&&e.info.requiresPcmTransformation&&(i=e.currentChunk.samples.reduce((r,s)=>r+k(s.duration,e.timescale),0)),(e.compactlyCodedChunkTable.length===0||V(e.compactlyCodedChunkTable).samplesPerChunk!==i)&&e.compactlyCodedChunkTable.push({firstChunk:e.finalizedChunks.length,samplesPerChunk:i}),this.fastStart==="in-memory"){e.currentChunk.offset=0;return}e.currentChunk.offset=this.writer.getPos();for(const r of e.currentChunk.samples)m(r.data),this.writer.write(r.data),r.data=null;await this.writer.flush()}async interleaveSamples(e=!1){if(m(this.isFragmented),!(!e&&!this.allTracksAreKnown()))e:for(;;){let i=null,r=1/0;for(const n of this.trackDatas){if(!e&&n.sampleQueue.length===0&&!n.track.source._closed)break e;n.sampleQueue.length>0&&n.sampleQueue[0].timestamp<r&&(i=n,r=n.sampleQueue[0].timestamp)}if(!i)break;const s=i.sampleQueue.shift();await this.addSampleToTrack(i,s)}}async finalizeFragment(e=!0){m(this.isFragmented);const i=this.nextFragmentNumber++;if(i===1){this.format._options.onMoov&&this.writer.startTrackingWrites();const g=ce(this.trackDatas,this.creationTime,!0);if(this.boxWriter.writeBox(g),this.format._options.onMoov){const{data:y,start:E}=this.writer.stopTrackingWrites();this.format._options.onMoov(y,E)}}const r=this.trackDatas.filter(g=>g.currentChunk),s=Ze(i,r),n=this.writer.getPos(),o=n+this.boxWriter.measureBox(s),a=16;let c=o+a,l=1/0;for(const g of r){g.currentChunk.offset=c,g.currentChunk.moofOffset=n;for(const y of g.currentChunk.samples)c+=y.size;l=Math.min(l,g.currentChunk.startTimestamp)}const d=c-o;this.format._options.onMoof&&this.writer.startTrackingWrites();const w=Ze(i,r);if(this.boxWriter.writeBox(w),this.format._options.onMoof){const{data:g,start:y}=this.writer.stopTrackingWrites();this.format._options.onMoof(g,y,l)}m(this.writer.getPos()===o),this.format._options.onMdat&&this.writer.startTrackingWrites();const v=be(d>=2**32);v.size=d,this.boxWriter.writeBox(v),this.writer.seek(o+a);for(const g of r)for(const y of g.currentChunk.samples)this.writer.write(y.data),y.data=null;if(this.format._options.onMdat){const{data:g,start:y}=this.writer.stopTrackingWrites();this.format._options.onMdat(g,y)}for(const g of r)g.finalizedChunks.push(g.currentChunk),this.finalizedChunks.push(g.currentChunk),g.currentChunk=null;e&&await this.writer.flush()}async onTrackClose(e){const i=await this.mutex.acquire();if(e.type==="subtitle"&&e.source._codec==="webvtt"){const r=this.trackDatas.find(s=>s.track===e);r&&await this.processWebVTTCues(r,1/0)}this.allTracksAreKnown()&&this.allTracksKnown.resolve(),this.isFragmented&&await this.interleaveSamples(),i()}async finalize(){const e=await this.mutex.acquire();this.allTracksKnown.resolve();for(const i of this.trackDatas)i.type==="subtitle"&&i.track.source._codec==="webvtt"&&await this.processWebVTTCues(i,1/0);if(this.isFragmented){await this.interleaveSamples(!0);for(const i of this.trackDatas)this.processTimestamps(i);await this.finalizeFragment(!1)}else for(const i of this.trackDatas)this.processTimestamps(i),await this.finalizeCurrentChunk(i);if(this.fastStart==="in-memory"){m(this.mdat);let i;for(let s=0;s<2;s++){const n=ce(this.trackDatas,this.creationTime),o=this.boxWriter.measureBox(n);i=this.boxWriter.measureBox(this.mdat);let a=this.writer.getPos()+o+i;for(const c of this.finalizedChunks){c.offset=a;for(const{data:l}of c.samples)m(l),a+=l.byteLength,i+=l.byteLength}if(a<2**32)break;i>=2**32&&(this.mdat.largeSize=!0)}this.format._options.onMoov&&this.writer.startTrackingWrites();const r=ce(this.trackDatas,this.creationTime);if(this.boxWriter.writeBox(r),this.format._options.onMoov){const{data:s,start:n}=this.writer.stopTrackingWrites();this.format._options.onMoov(s,n)}this.format._options.onMdat&&this.writer.startTrackingWrites(),this.mdat.size=i,this.boxWriter.writeBox(this.mdat);for(const s of this.finalizedChunks)for(const n of s.samples)m(n.data),this.writer.write(n.data),n.data=null;if(this.format._options.onMdat){const{data:s,start:n}=this.writer.stopTrackingWrites();this.format._options.onMdat(s,n)}}else if(this.isFragmented){const i=this.writer.getPos(),r=Ji(this.trackDatas);this.boxWriter.writeBox(r);const s=this.writer.getPos()-i;this.writer.seek(this.writer.getPos()-4),this.boxWriter.writeU32(s)}else{m(this.mdat);const i=this.boxWriter.offsets.get(this.mdat);m(i!==void 0);const r=this.writer.getPos()-i;if(this.mdat.size=r,this.mdat.largeSize=r>=2**32,this.boxWriter.patchBox(this.mdat),this.format._options.onMdat){const{data:n,start:o}=this.writer.stopTrackingWrites();this.format._options.onMdat(n,o)}this.format._options.onMoov&&this.writer.startTrackingWrites();const s=ce(this.trackDatas,this.creationTime);if(this.boxWriter.writeBox(s),this.format._options.onMoov){const{data:n,start:o}=this.writer.stopTrackingWrites();this.format._options.onMoov(n,o)}}e()}}/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */const Je=new Uint8Array(0);class J{constructor(e,i,r,s,n=-1,o){if(this.data=e,this.type=i,this.timestamp=r,this.duration=s,this.sequenceNumber=n,e===Je&&o===void 0)throw new Error("Internal error: byteLength must be explicitly provided when constructing metadata-only packets.");if(o===void 0&&(o=e.byteLength),!(e instanceof Uint8Array))throw new TypeError("data must be a Uint8Array.");if(i!=="key"&&i!=="delta")throw new TypeError('type must be either "key" or "delta".');if(!Number.isFinite(r))throw new TypeError("timestamp must be a number.");if(!Number.isFinite(s)||s<0)throw new TypeError("duration must be a non-negative number.");if(!Number.isFinite(n))throw new TypeError("sequenceNumber must be a number.");if(!Number.isInteger(o)||o<0)throw new TypeError("byteLength must be a non-negative integer.");this.byteLength=o}get isMetadataOnly(){return this.data===Je}get microsecondTimestamp(){return Math.trunc(X*this.timestamp)}get microsecondDuration(){return Math.trunc(X*this.duration)}toEncodedVideoChunk(){if(this.isMetadataOnly)throw new TypeError("Metadata-only packets cannot be converted to a video chunk.");if(typeof EncodedVideoChunk>"u")throw new Error("Your browser does not support EncodedVideoChunk.");return new EncodedVideoChunk({data:this.data,type:this.type,timestamp:this.microsecondTimestamp,duration:this.microsecondDuration})}toEncodedAudioChunk(){if(this.isMetadataOnly)throw new TypeError("Metadata-only packets cannot be converted to an audio chunk.");if(typeof EncodedAudioChunk>"u")throw new Error("Your browser does not support EncodedAudioChunk.");return new EncodedAudioChunk({data:this.data,type:this.type,timestamp:this.microsecondTimestamp,duration:this.microsecondDuration})}static fromEncodedChunk(e){if(!(e instanceof EncodedVideoChunk||e instanceof EncodedAudioChunk))throw new TypeError("chunk must be an EncodedVideoChunk or EncodedAudioChunk.");const i=new Uint8Array(e.byteLength);return e.copyTo(i),new J(i,e.type,e.timestamp/1e6,(e.duration??0)/1e6)}clone(e){if(e!==void 0&&(typeof e!="object"||e===null))throw new TypeError("options, when provided, must be an object.");if(e?.timestamp!==void 0&&!Number.isFinite(e.timestamp))throw new TypeError("options.timestamp, when provided, must be a number.");if(e?.duration!==void 0&&!Number.isFinite(e.duration))throw new TypeError("options.duration, when provided, must be a number.");return new J(this.data,this.type,e?.timestamp??this.timestamp,e?.duration??this.duration,this.sequenceNumber,this.byteLength)}}/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */class Y{get displayWidth(){return this.rotation%180===0?this.codedWidth:this.codedHeight}get displayHeight(){return this.rotation%180===0?this.codedHeight:this.codedWidth}get microsecondTimestamp(){return Math.trunc(X*this.timestamp)}get microsecondDuration(){return Math.trunc(X*this.duration)}constructor(e,i){if(this._closed=!1,e instanceof ArrayBuffer||ArrayBuffer.isView(e)){if(!i||typeof i!="object")throw new TypeError("init must be an object.");if(!("format"in i)||typeof i.format!="string")throw new TypeError("init.format must be a string.");if(!Number.isInteger(i.codedWidth)||i.codedWidth<=0)throw new TypeError("init.codedWidth must be a positive integer.");if(!Number.isInteger(i.codedHeight)||i.codedHeight<=0)throw new TypeError("init.codedHeight must be a positive integer.");if(i.rotation!==void 0&&![0,90,180,270].includes(i.rotation))throw new TypeError("init.rotation, when provided, must be 0, 90, 180, or 270.");if(!Number.isFinite(i.timestamp))throw new TypeError("init.timestamp must be a number.");if(i.duration!==void 0&&(!Number.isFinite(i.duration)||i.duration<0))throw new TypeError("init.duration, when provided, must be a non-negative number.");this._data=N(e).slice(),this.format=i.format,this.codedWidth=i.codedWidth,this.codedHeight=i.codedHeight,this.rotation=i.rotation??0,this.timestamp=i.timestamp,this.duration=i.duration??0,this.colorSpace=new VideoColorSpace(i.colorSpace)}else if(typeof VideoFrame<"u"&&e instanceof VideoFrame){if(i?.rotation!==void 0&&![0,90,180,270].includes(i.rotation))throw new TypeError("init.rotation, when provided, must be 0, 90, 180, or 270.");if(i?.timestamp!==void 0&&!Number.isFinite(i?.timestamp))throw new TypeError("init.timestamp, when provided, must be a number.");if(i?.duration!==void 0&&(!Number.isFinite(i.duration)||i.duration<0))throw new TypeError("init.duration, when provided, must be a non-negative number.");this._data=e,this.format=e.format,this.codedWidth=e.codedWidth,this.codedHeight=e.codedHeight,this.rotation=i?.rotation??0,this.timestamp=i?.timestamp??e.timestamp/1e6,this.duration=i?.duration??(e.duration??0)/1e6,this.colorSpace=e.colorSpace}else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof SVGImageElement<"u"&&e instanceof SVGImageElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap||typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&e instanceof OffscreenCanvas){if(!i||typeof i!="object")throw new TypeError("init must be an object.");if(i.rotation!==void 0&&![0,90,180,270].includes(i.rotation))throw new TypeError("init.rotation, when provided, must be 0, 90, 180, or 270.");if(!Number.isFinite(i.timestamp))throw new TypeError("init.timestamp must be a number.");if(i.duration!==void 0&&(!Number.isFinite(i.duration)||i.duration<0))throw new TypeError("init.duration, when provided, must be a non-negative number.");if(typeof VideoFrame<"u")return new Y(new VideoFrame(e,{timestamp:Math.trunc(i.timestamp*X),duration:Math.trunc((i.duration??0)*X)}),i);let r=0,s=0;if("naturalWidth"in e?(r=e.naturalWidth,s=e.naturalHeight):"videoWidth"in e?(r=e.videoWidth,s=e.videoHeight):"width"in e&&(r=Number(e.width),s=Number(e.height)),!r||!s)throw new TypeError("Could not determine dimensions.");const n=new OffscreenCanvas(r,s),o=n.getContext("2d",{alpha:!1,willReadFrequently:!0});m(o),o.drawImage(e,0,0),this._data=n,this.format="RGBX",this.codedWidth=r,this.codedHeight=s,this.rotation=i.rotation??0,this.timestamp=i.timestamp,this.duration=i.duration??0,this.colorSpace=new VideoColorSpace({matrix:"rgb",primaries:"bt709",transfer:"iec61966-2-1",fullRange:!0})}else throw new TypeError("Invalid data type: Must be a BufferSource or CanvasImageSource.")}clone(){if(this._closed)throw new Error("VideoSample is closed.");return m(this._data!==null),te(this._data)?new Y(this._data.clone(),{timestamp:this.timestamp,duration:this.duration}):this._data instanceof Uint8Array?new Y(this._data.slice(),{format:this.format,codedWidth:this.codedWidth,codedHeight:this.codedHeight,timestamp:this.timestamp,duration:this.duration,colorSpace:this.colorSpace}):new Y(this._data,{format:this.format,codedWidth:this.codedWidth,codedHeight:this.codedHeight,timestamp:this.timestamp,duration:this.duration,colorSpace:this.colorSpace})}close(){this._closed||(te(this._data)?this._data.close():this._data=null,this._closed=!0)}allocationSize(){if(this._closed)throw new Error("VideoSample is closed.");return m(this._data!==null),te(this._data)?this._data.allocationSize():this._data instanceof Uint8Array?this._data.byteLength:this.codedWidth*this.codedHeight*4}async copyTo(e){if(!Ae(e))throw new TypeError("destination must be an ArrayBuffer or an ArrayBuffer view.");if(this._closed)throw new Error("VideoSample is closed.");if(m(this._data!==null),te(this._data))await this._data.copyTo(e);else if(this._data instanceof Uint8Array)N(e).set(this._data);else{const r=this._data.getContext("2d",{alpha:!1});m(r);const s=r.getImageData(0,0,this.codedWidth,this.codedHeight);N(e).set(s.data)}}toVideoFrame(){if(this._closed)throw new Error("VideoSample is closed.");return m(this._data!==null),te(this._data)?new VideoFrame(this._data,{timestamp:this.microsecondTimestamp,duration:this.microsecondDuration||void 0}):this._data instanceof Uint8Array?new VideoFrame(this._data,{format:this.format,codedWidth:this.codedWidth,codedHeight:this.codedHeight,timestamp:this.microsecondTimestamp,duration:this.microsecondDuration,colorSpace:this.colorSpace}):new VideoFrame(this._data,{timestamp:this.microsecondTimestamp,duration:this.microsecondDuration})}draw(e,i,r,s=this.displayWidth,n=this.displayHeight){if(!(typeof CanvasRenderingContext2D<"u"&&e instanceof CanvasRenderingContext2D||typeof OffscreenCanvasRenderingContext2D<"u"&&e instanceof OffscreenCanvasRenderingContext2D))throw new TypeError("context must be a CanvasRenderingContext2D or OffscreenCanvasRenderingContext2D.");if(!Number.isFinite(i))throw new TypeError("dx must be a number.");if(!Number.isFinite(r))throw new TypeError("dy must be a number.");if(!Number.isFinite(s)||s<0)throw new TypeError("dWidth must be a non-negative number.");if(!Number.isFinite(n)||n<0)throw new TypeError("dHeight must be a non-negative number.");if(this._closed)throw new Error("VideoSample is closed.");const o=this.toCanvasImageSource();e.save();const a=i+s/2,c=r+n/2;e.translate(a,c),e.rotate(this.rotation*Math.PI/180);const l=this.rotation%180===0?1:s/n;e.scale(1/l,l),e.drawImage(o,-s/2,-n/2,s,n),e.restore()}toCanvasImageSource(){if(this._closed)throw new Error("VideoSample is closed.");if(m(this._data!==null),this._data instanceof Uint8Array){const e=this.toVideoFrame();return queueMicrotask(()=>e.close()),e}else return this._data}setRotation(e){if(![0,90,180,270].includes(e))throw new TypeError("newRotation must be 0, 90, 180, or 270.");this.rotation=e}setTimestamp(e){if(!Number.isFinite(e))throw new TypeError("newTimestamp must be a number.");this.timestamp=e}setDuration(e){if(!Number.isFinite(e)||e<0)throw new TypeError("newDuration must be a non-negative number.");this.duration=e}}const te=t=>typeof VideoFrame<"u"&&t instanceof VideoFrame;/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */class gt{getSupportedVideoCodecs(){return this.getSupportedCodecs().filter(e=>R.includes(e))}getSupportedAudioCodecs(){return this.getSupportedCodecs().filter(e=>le.includes(e))}getSupportedSubtitleCodecs(){return this.getSupportedCodecs().filter(e=>de.includes(e))}_codecUnsupportedHint(e){return""}}class wt extends gt{constructor(e={}){if(!e||typeof e!="object")throw new TypeError("options must be an object.");if(e.fastStart!==void 0&&![!1,"in-memory","fragmented"].includes(e.fastStart))throw new TypeError('options.fastStart, when provided, must be false, "in-memory", or "fragmented".');if(e.minimumFragmentDuration!==void 0&&(!Number.isFinite(e.minimumFragmentDuration)||e.minimumFragmentDuration<0))throw new TypeError("options.minimumFragmentDuration, when provided, must be a non-negative number.");if(e.onFtyp!==void 0&&typeof e.onFtyp!="function")throw new TypeError("options.onFtyp, when provided, must be a function.");if(e.onMoov!==void 0&&typeof e.onMoov!="function")throw new TypeError("options.onMoov, when provided, must be a function.");if(e.onMdat!==void 0&&typeof e.onMdat!="function")throw new TypeError("options.onMdat, when provided, must be a function.");if(e.onMoof!==void 0&&typeof e.onMoof!="function")throw new TypeError("options.onMoof, when provided, must be a function.");super(),this._options=e}getSupportedTrackCounts(){return{video:{min:0,max:1/0},audio:{min:0,max:1/0},subtitle:{min:0,max:1/0},total:{min:1,max:2**32-1}}}get supportsVideoRotationMetadata(){return!0}_createMuxer(e){return new gr(e,this)}}class Oe extends wt{get _name(){return"MP4"}get fileExtension(){return".mp4"}get mimeType(){return"video/mp4"}getSupportedCodecs(){return[...R,...it,"pcm-s16","pcm-s16be","pcm-s24","pcm-s24be","pcm-s32","pcm-s32be","pcm-f32","pcm-f32be","pcm-f64","pcm-f64be",...de]}_codecUnsupportedHint(e){return new yt().getSupportedCodecs().includes(e)?" Switching to MOV will grant support for this codec.":""}}class yt extends wt{get _name(){return"MOV"}get fileExtension(){return".mov"}get mimeType(){return"video/quicktime"}getSupportedCodecs(){return[...R,...le]}_codecUnsupportedHint(e){return new Oe().getSupportedCodecs().includes(e)?" Switching to MP4 will grant support for this codec.":""}}/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */let We=class{constructor(){this._connectedTrack=null,this._closingPromise=null,this._closed=!1,this._timestampOffset=0}_ensureValidAdd(){if(!this._connectedTrack)throw new Error("Source is not connected to an output track.");if(this._connectedTrack.output.state==="canceled")throw new Error("Output has been canceled.");if(this._connectedTrack.output.state==="finalizing"||this._connectedTrack.output.state==="finalized")throw new Error("Output has been finalized.");if(this._connectedTrack.output.state==="pending")throw new Error("Output has not started.");if(this._closed)throw new Error("Source is closed.")}_start(){}async _flushAndClose(){}close(){if(this._closingPromise)return;const e=this._connectedTrack;if(!e)throw new Error("Cannot call close without connecting the source to an output track.");if(e.output.state==="pending")throw new Error("Cannot call close before output has been started.");this._closingPromise=(async()=>{await this._flushAndClose(),this._closed=!0,!(e.output.state==="finalizing"||e.output.state==="finalized")&&e.output._muxer.onTrackClose(e)})()}async _flushOrWaitForClose(){return this._closingPromise?this._closingPromise:this._flushAndClose()}};class Ue extends We{constructor(e){if(super(),this._connectedTrack=null,!R.includes(e))throw new TypeError(`Invalid video codec '${e}'. Must be one of: ${R.join(", ")}.`);this._codec=e}}class wr extends Ue{constructor(e){super(e)}add(e,i){if(!(e instanceof J))throw new TypeError("packet must be an EncodedPacket.");if(e.isMetadataOnly)throw new TypeError("Metadata-only packets cannot be added.");if(i!==void 0&&(!i||typeof i!="object"))throw new TypeError("meta, when provided, must be an object.");return this._ensureValidAdd(),this._connectedTrack.output._muxer.addEncodedVideoPacket(this._connectedTrack,e,i)}}const yr=t=>{if(!t||typeof t!="object")throw new TypeError("Encoding config must be an object.");if(!R.includes(t.codec))throw new TypeError(`Invalid video codec '${t.codec}'. Must be one of: ${R.join(", ")}.`);if(!(t.bitrate instanceof ne)&&(!Number.isInteger(t.bitrate)||t.bitrate<=0))throw new TypeError("config.bitrate must be a positive integer or a quality.");if(t.latencyMode!==void 0&&!["quality","realtime"].includes(t.latencyMode))throw new TypeError("config.latencyMode, when provided, must be 'quality' or 'realtime'.");if(t.keyFrameInterval!==void 0&&(!Number.isFinite(t.keyFrameInterval)||t.keyFrameInterval<0))throw new TypeError("config.keyFrameInterval, when provided, must be a non-negative number.");if(t.fullCodecString!==void 0&&typeof t.fullCodecString!="string")throw new TypeError("config.fullCodecString, when provided, must be a string.");if(t.fullCodecString!==void 0&&It(t.fullCodecString)!==t.codec)throw new TypeError(`config.fullCodecString, when provided, must be a string that matches the specified codec (${t.codec}).`);if(t.onEncodedPacket!==void 0&&typeof t.onEncodedPacket!="function")throw new TypeError("config.onEncodedChunk, when provided, must be a function.");if(t.onEncoderConfig!==void 0&&typeof t.onEncoderConfig!="function")throw new TypeError("config.onEncoderConfig, when provided, must be a function.")};class br{constructor(e,i){this.source=e,this.encodingConfig=i,this.ensureEncoderPromise=null,this.encoderInitialized=!1,this.encoder=null,this.muxer=null,this.lastMultipleOfKeyFrameInterval=-1,this.lastWidth=null,this.lastHeight=null,this.customEncoder=null,this.customEncoderCallSerializer=new At,this.customEncoderQueueSize=0,this.encoderError=null}async add(e,i,r){if(this.checkForEncoderError(),this.source._ensureValidAdd(),this.lastWidth!==null&&this.lastHeight!==null){if(e.codedWidth!==this.lastWidth||e.codedHeight!==this.lastHeight)throw new Error(`Video sample size must remain constant. Expected ${this.lastWidth}x${this.lastHeight}, got ${e.codedWidth}x${e.codedHeight}.`)}else this.lastWidth=e.codedWidth,this.lastHeight=e.codedHeight;this.encoderInitialized||(this.ensureEncoderPromise||this.ensureEncoder(e),this.encoderInitialized||await this.ensureEncoderPromise),m(this.encoderInitialized);const s=this.encodingConfig.keyFrameInterval??5,n=Math.floor(e.timestamp/s),o={...r,keyFrame:r?.keyFrame||s===0||n!==this.lastMultipleOfKeyFrameInterval};if(this.lastMultipleOfKeyFrameInterval=n,this.customEncoder){this.customEncoderQueueSize++;const a=this.customEncoderCallSerializer.call(()=>this.customEncoder.encode(e,o)).then(()=>{this.customEncoderQueueSize--,i&&e.close()}).catch(c=>{this.encoderError??=c});this.customEncoderQueueSize>=4&&await a}else{m(this.encoder);const a=e.toVideoFrame();this.encoder.encode(a,o),a.close(),i&&e.close(),this.encoder.encodeQueueSize>=4&&await new Promise(c=>this.encoder.addEventListener("dequeue",c,{once:!0}))}await this.muxer.mutex.currentPromise}async ensureEncoder(e){if(!this.encoder)return this.ensureEncoderPromise=(async()=>{const i=e.codedWidth,r=e.codedHeight,s=this.encodingConfig.bitrate instanceof ne?this.encodingConfig.bitrate._toVideoBitrate(this.encodingConfig.codec,i,r):this.encodingConfig.bitrate,n={codec:this.encodingConfig.fullCodecString??ke(this.encodingConfig.codec,i,r,s),width:i,height:r,bitrate:s,framerate:this.source._connectedTrack?.metadata.frameRate,latencyMode:this.encodingConfig.latencyMode,...Be(this.encodingConfig.codec)};this.encodingConfig.onEncoderConfig?.(n);const o=Ee.find(a=>a.supports(this.encodingConfig.codec,n));if(o)this.customEncoder=new o,this.customEncoder.codec=this.encodingConfig.codec,this.customEncoder.config=n,this.customEncoder.onPacket=(a,c)=>{if(!(a instanceof J))throw new TypeError("The first argument passed to onPacket must be an EncodedPacket.");if(c!==void 0&&(!c||typeof c!="object"))throw new TypeError("The second argument passed to onPacket must be an object or undefined.");this.encodingConfig.onEncodedPacket?.(a,c),this.muxer.addEncodedVideoPacket(this.source._connectedTrack,a,c)},await this.customEncoder.init();else{if(typeof VideoEncoder>"u")throw new Error("VideoEncoder is not supported by this browser.");if(!(await VideoEncoder.isConfigSupported(n)).supported)throw new Error(`This specific encoder configuration (${n.codec}, ${n.bitrate} bps, ${n.width}x${n.height}) is not supported by this browser. Consider using another codec or changing your video parameters.`);this.encoder=new VideoEncoder({output:(c,l)=>{const d=J.fromEncodedChunk(c);this.encodingConfig.onEncodedPacket?.(d,l),this.muxer.addEncodedVideoPacket(this.source._connectedTrack,d,l)},error:c=>{this.encoderError??=c}}),this.encoder.configure(n)}m(this.source._connectedTrack),this.muxer=this.source._connectedTrack.output._muxer,this.encoderInitialized=!0})()}async flushAndClose(){this.checkForEncoderError(),this.customEncoder?(this.customEncoderCallSerializer.call(()=>this.customEncoder.flush()),await this.customEncoderCallSerializer.call(()=>this.customEncoder.close())):this.encoder&&(await this.encoder.flush(),this.encoder.close()),this.checkForEncoderError()}getQueueSize(){return this.customEncoder?this.customEncoderQueueSize:this.encoder?.encodeQueueSize??0}checkForEncoderError(){if(this.encoderError)throw this.encoderError.stack=new Error().stack,this.encoderError}}class vr extends Ue{constructor(e,i){if(!(e instanceof MediaStreamTrack)||e.kind!=="video")throw new TypeError("track must be a video MediaStreamTrack.");yr(i),i={...i,latencyMode:"realtime"},super(i.codec),this._abortController=null,this._encoder=new br(this,i),this._track=e}_start(){this._abortController=new AbortController;let e=!1;const i=new MediaStreamTrackProcessor({track:this._track}),r=new WritableStream({write:s=>{if(e||(Tr(this,s),e=!0),this._encoder.getQueueSize()>=4){s.close();return}this._encoder.add(new Y(s),!0).catch(n=>{throw this._abortController?.abort(),n})}});i.readable.pipeTo(r,{signal:this._abortController.signal}).catch(s=>{s instanceof DOMException&&s.name==="AbortError"||console.error("Pipe error:",s)})}async _flushAndClose(){this._abortController&&(this._abortController.abort(),this._abortController=null),await this._encoder.flushAndClose()}}class Cr extends We{constructor(e){if(super(),this._connectedTrack=null,!le.includes(e))throw new TypeError(`Invalid audio codec '${e}'. Must be one of: ${le.join(", ")}.`);this._codec=e}}const Tr=(t,e)=>{const i=e.timestamp/1e6;m(t._connectedTrack);const r=t._connectedTrack.output._muxer;r.firstMediaStreamTimestamp===null&&(r.firstMediaStreamTimestamp=i),t._timestampOffset=-Math.min(r.firstMediaStreamTimestamp,i)};class xr extends We{constructor(e){if(super(),this._connectedTrack=null,!de.includes(e))throw new TypeError(`Invalid subtitle codec '${e}'. Must be one of: ${de.join(", ")}.`);this._codec=e}}/*!
 * Copyright (c) 2025-present, Vanilagy and contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */const _r=["video","audio","subtitle"],xe=t=>{if(!t||typeof t!="object")throw new TypeError("metadata must be an object.");if(t.languageCode!==void 0&&!Mt(t.languageCode))throw new TypeError("metadata.languageCode must be a three-letter, ISO 639-2/T language code.")};class bt{constructor(e){if(this.state="pending",this._tracks=[],this._startPromise=null,this._cancelPromise=null,this._finalizePromise=null,this._mutex=new tt,!e||typeof e!="object")throw new TypeError("options must be an object.");if(!(e.format instanceof gt))throw new TypeError("options.format must be an OutputFormat.");if(!(e.target instanceof Ve))throw new TypeError("options.target must be a Target.");if(e.target._output)throw new Error("Target is already used for another output.");e.target._output=this,this.format=e.format,this.target=e.target,this._writer=e.target._createWriter(),this._muxer=e.format._createMuxer(this)}addVideoTrack(e,i={}){if(!(e instanceof Ue))throw new TypeError("source must be a VideoSource.");if(xe(i),i.rotation!==void 0&&![0,90,180,270].includes(i.rotation))throw new TypeError(`Invalid video rotation: ${i.rotation}. Has to be 0, 90, 180 or 270.`);if(!this.format.supportsVideoRotationMetadata&&i.rotation)throw new Error(`${this.format._name} does not support video rotation metadata.`);if(i.frameRate!==void 0&&(!Number.isFinite(i.frameRate)||i.frameRate<=0))throw new TypeError(`Invalid video frame rate: ${i.frameRate}. Must be a positive number.`);this._addTrack("video",e,i)}addAudioTrack(e,i={}){if(!(e instanceof Cr))throw new TypeError("source must be an AudioSource.");xe(i),this._addTrack("audio",e,i)}addSubtitleTrack(e,i={}){if(!(e instanceof xr))throw new TypeError("source must be a SubtitleSource.");xe(i),this._addTrack("subtitle",e,i)}_addTrack(e,i,r){if(this.state!=="pending")throw new Error("Cannot add track after output has been started or canceled.");if(i._connectedTrack)throw new Error("Source is already used for a track.");const s=this.format.getSupportedTrackCounts(),n=this._tracks.reduce((l,d)=>l+(d.type===e?1:0),0),o=s[e].max;if(n===o)throw new Error(o===0?`${this.format._name} does not support ${e} tracks.`:`${this.format._name} does not support more than ${o} ${e} track${o===1?"":"s"}.`);const a=s.total.max;if(this._tracks.length===a)throw new Error(`${this.format._name} does not support more than ${a} tracks${a===1?"":"s"} in total.`);const c={id:this._tracks.length+1,output:this,type:e,source:i,metadata:r};if(c.type==="video"){const l=this.format.getSupportedVideoCodecs();if(l.length===0)throw new Error(`${this.format._name} does not support video tracks.`+this.format._codecUnsupportedHint(c.source._codec));if(!l.includes(c.source._codec))throw new Error(`Codec '${c.source._codec}' cannot be contained within ${this.format._name}. Supported video codecs are: ${l.map(d=>`'${d}'`).join(", ")}.`+this.format._codecUnsupportedHint(c.source._codec))}else if(c.type==="audio"){const l=this.format.getSupportedAudioCodecs();if(l.length===0)throw new Error(`${this.format._name} does not support audio tracks.`+this.format._codecUnsupportedHint(c.source._codec));if(!l.includes(c.source._codec))throw new Error(`Codec '${c.source._codec}' cannot be contained within ${this.format._name}. Supported audio codecs are: ${l.map(d=>`'${d}'`).join(", ")}.`+this.format._codecUnsupportedHint(c.source._codec))}else if(c.type==="subtitle"){const l=this.format.getSupportedSubtitleCodecs();if(l.length===0)throw new Error(`${this.format._name} does not support subtitle tracks.`+this.format._codecUnsupportedHint(c.source._codec));if(!l.includes(c.source._codec))throw new Error(`Codec '${c.source._codec}' cannot be contained within ${this.format._name}. Supported subtitle codecs are: ${l.map(d=>`'${d}'`).join(", ")}.`+this.format._codecUnsupportedHint(c.source._codec))}this._tracks.push(c),i._connectedTrack=c}async start(){const e=this.format.getSupportedTrackCounts();for(const r of _r){const s=this._tracks.reduce((o,a)=>o+(a.type===r?1:0),0),n=e[r].min;if(s<n)throw new Error(n===e[r].max?`${this.format._name} requires exactly ${n} ${r} track${n===1?"":"s"}.`:`${this.format._name} requires at least ${n} ${r} track${n===1?"":"s"}.`)}const i=e.total.min;if(this._tracks.length<i)throw new Error(i===e.total.max?`${this.format._name} requires exactly ${i} track${i===1?"":"s"}.`:`${this.format._name} requires at least ${i} track${i===1?"":"s"}.`);if(this.state==="canceled")throw new Error("Output has been canceled.");return this._startPromise?(console.warn("Output has already been started."),this._startPromise):this._startPromise=(async()=>{this.state="started",this._writer.start();const r=await this._mutex.acquire();await this._muxer.start();for(const s of this._tracks)s.source._start();r()})()}getMimeType(){return this._muxer.getMimeType()}async cancel(){if(this._cancelPromise)return console.warn("Output has already been canceled."),this._cancelPromise;if(this.state==="finalizing"||this.state==="finalized"){console.warn("Output has already been finalized.");return}return this._cancelPromise=(async()=>{this.state="canceled";const e=await this._mutex.acquire(),i=this._tracks.map(r=>r.source._flushOrWaitForClose());await Promise.all(i),await this._writer.close(),e()})()}async finalize(){if(this.state==="pending")throw new Error("Cannot finalize before starting.");if(this.state==="canceled")throw new Error("Cannot finalize after canceling.");return this._finalizePromise?(console.warn("Output has already been finalized."),this._finalizePromise):this._finalizePromise=(async()=>{this.state="finalizing";const e=await this._mutex.acquire(),i=this._tracks.map(r=>r.source._flushOrWaitForClose());await Promise.all(i),await this._muxer.finalize(),await this._writer.flush(),await this._writer.finalize(),this.state="finalized",e()})()}}class Sr{buffer=[];maxDuration;constructor(e){if(e<0)throw new RangeError("Invalid maxDuration. Must be a non-negative number.");this.maxDuration=e}getDuration(){if(this.buffer.length<2)return 0;const e=this.buffer[0];return this.buffer[this.buffer.length-1].timestamp-e.timestamp}async add(...e){e.forEach(i=>{this.buffer.push(i)}),this.trim()}trim(){for(;this.buffer.length>=2&&this.getDuration()>this.maxDuration;)this.buffer.shift()}toArrayWithDuration(e){if(e<0||this.buffer.length==0)return[];const i=this.buffer[0].timestamp;for(let r=0;r<this.buffer.length;r++)if(this.buffer[r].timestamp-i>e)return this.buffer.slice(0,r);return this.buffer.slice()}toArray(){return this.buffer.slice()}}const vt=()=>qt(["vp9","avc","vp8","av1"],{width:1920,height:1080,bitrate:st});async function*Er(){"MediaSource"in window||(yield"No MediaSource"),"MediaStream"in window||(yield"No MediaStream"),"MediaStreamTrackProcessor"in window||(yield"No MediaStreamTrackProcessor"),await vt()||(yield"No codecs")}async function kr(t,e,i,r,s){const n=new bt({format:new Oe({fastStart:"in-memory"}),target:new pt}),o=new wr(t);n.addVideoTrack(o),await n.start();const a=e.toArrayWithDuration(s*1.1);for(;a[0]&&a[0].type!=="key";)a.shift();const c=a[0]?.timestamp||0;for(const l of a)o.add(l.clone({timestamp:l.timestamp-c}),r);return await n.finalize(),new Blob([n.target.buffer],{type:i})}async function Br(t,e,i){const r=e.getVideoTracks()[0];if(!r)throw new Error("No video track found in stream");const s=new MediaSource;t(s),await new Promise(F=>s.onsourceopen=F);const n=await vt(),o=new Sr(2*i/1e3),a=Promise.withResolvers(),c=Promise.withResolvers(),l=Promise.withResolvers();let d=null;const w=new WritableStream({async write(F){if(d){for(;d.updating;)await Pr();d.appendBuffer(F.data)}}}),v=new bt({format:new Oe({fastStart:"fragmented"}),target:new mr(w,{chunked:!0,chunkSize:64*1024})});let g=0,y=null,E=0,A=0;const q=10,ae=new vr(r,{codec:n,bitrate:st,latencyMode:"realtime",keyFrameInterval:i/1e3/q,onEncodedPacket(F,$){y===null&&(y=F.timestamp),g++,E=F.timestamp,$&&l.resolve($);const Q=o.add(F);F.type==="key"&&(A++,A>=q&&c.resolve(Q))}});v.addVideoTrack(ae),await v.start();const D=await v.getMimeType();return d=s.addSourceBuffer(D),a.resolve({mimeType:D,onReady:c.promise,buildDelayedVideo:async()=>{const F=await l.promise,$=await kr(n,o,D,F,i/1e3),Q=await $.arrayBuffer();return{blob:$,size:Q.byteLength}},end:()=>v.finalize(),fpsEstimate:()=>{if(y===null)return 0;const F=E-y;return g/F}}),a.promise}async function Pr(){await new Promise(t=>setTimeout(t,10))}function Mr(){const t=new Date;return`${t.getFullYear()}-${t.getMonth()+1}-${t.getDate()} ${t.getHours()}-${t.getMinutes()}-${t.getSeconds()}`}async function Fr(t,e){const i=URL.createObjectURL(t),r=document.createElement("a");r.style.display="none",r.href=i,r.download=`warp-lens-${Mr()}.${e.includes("webm")?"webm":"mp4"}`,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(i)}class z{constructor(e,i){this.key=e,this.initial=i}listeners=[];map(e){const i=new z(this.key,e(this.initial));return this.onChange(r=>{i.set(e(r))}),i}set(e){localStorage.setItem(this.key,JSON.stringify(e)),this.listeners.forEach(i=>i(e))}get(){const e=localStorage.getItem(this.key);return e===null?this.initial:JSON.parse(e)}onChange(e){this.listeners.push(e)}}const Ar=["user","on","off"],Ct={label:"720p",width:1280,height:720},zr=[{label:"480p",width:854,height:480},Ct,{label:"1080p",width:1920,height:1080},{label:"1440p",width:2560,height:1440},{label:"4k",width:3840,height:2160}],x={cameraId:new z("cameraId",null),delayInMs:new z("delay",8500),bools:{showStatus:new z("showStatus",!1),showPreview:new z("showPreview",!0),showGrid:new z("showGrid",!0),saveWithoutPrompt:new z("saveWithoutPrompt",!1)},previewSize:new z("previewSize",15),mirrorVideo:new z("mirrorVideo","user"),resolution:new z("resolution",Ct)};function B(t){const e=document.querySelector(t);if(e===null){const i=new Error(`Element not found: ${t}`);throw alert(i),i}return e}function ie(t,e){const i=document.createElement("input");i.type="checkbox",i.id=e.key;const r=document.createElement("label");return r.htmlFor=e.key,r.appendChild(i),r.appendChild(document.createTextNode(t)),i.checked=e.get(),i.addEventListener("input",()=>{e.set(i.checked)}),i}function Ir(t,e,i,r,s){const n=document.createElement("input");n.type="range",n.id=e.key,n.min=i.toFixed(0),n.max=r.toFixed(0);const o=document.createElement("label");o.htmlFor=e.key,o.appendChild(document.createTextNode(t));const a=document.createElement("span");return o.appendChild(a),o.appendChild(n),n.valueAsNumber=e.get(),a.textContent=` ${n.valueAsNumber}${s}`,n.addEventListener("input",()=>{a.textContent=` ${n.valueAsNumber}${s}`,e.set(n.valueAsNumber)}),n}function Le(t,e,i,r){const s=e.map((a,c)=>{const l=r(i.get())===r(a)?"selected":"";return`<option value="${c}" ${l}>${r(a)}</option>`}).join(""),n=document.createElement("label");n.htmlFor=i.key,n.textContent=t;const o=document.createElement("select");return o.id=i.key,o.innerHTML=s,o.addEventListener("change",()=>{const a=parseInt(o.value,10),c=e[a];r(i.get())!==r(c)&&i.set(c)}),n.appendChild(o),o}function Vr(t,e,i){const r=document.createElement("dialog");r.innerHTML=`
      <article>
        <header><h3>${t}</h3></header>
        <form></form>
        <footer>
          <button class="secondary" id="no">No</button>
          <button id="yes">Yes</button>
        </footer>
      </article>
    `,r.querySelector("form").prepend(ie(e,i).parentElement);const n=r.querySelector("#no"),o=r.querySelector("#yes");document.body.append(r),r.showModal();const a=()=>{r.close(),document.body.removeChild(r)};return new Promise(c=>{n.onclick=()=>{a(),c(!1)},o.onclick=()=>{a(),c(!0)}})}const Or=Le("Mirror",Ar,x.mirrorVideo,t=>t==="user"?"When facing user (selfie camera)":t==="on"?"Always":"Never"),De=await et(),Wr=Le("Select a camera",De.map(t=>t.deviceId),x.cameraId,t=>De.find(e=>e.deviceId===t)?.label??"Unknown camera"),Ur=Le("Select a target resolution",zr,x.resolution,t=>t.label),f={delayInput:B("#delay-s"),header:B("#header"),headerImage:B("#header-img"),previewVideo:B("#preview"),previewCanvas:B("#preview-canvas"),delayedVideo:B("#delayed"),grid:B("#grid-overlay"),fatalErrorModal:B("#fatal-error-modal"),settingsModal:B("#settings-modal"),closeModal:B("#close-settings"),expandSettings:B("#expand-settings"),togglePlay:B("#toggle-play"),togglePlayFeatherSvgUse:B("#toggle-play use"),save:B("#save"),status:B("#status"),modals:{cameraSelector:Wr,resolutionSelector:Ur,mirrorVideoSelect:Or,grid:ie("Show grid",x.bools.showGrid),autoSave:ie("Automatically save videos without prompt",x.bools.saveWithoutPrompt),preview:ie("Show preview",x.bools.showPreview),previewSize:Ir("Size of preview (% of total screen):",x.previewSize,5,50,"%"),status:ie("Show status",x.bools.showStatus)},confirmSave:(t,e)=>{const i=Math.floor(e/60),s=`${i>0?`${i}m `:""}${(e-i*60).toFixed(1)}s`;return Vr(`Save to file? (${(t/1024/1024).toFixed(1)} MB, ${s})`,"Save automatically next time",x.bools.saveWithoutPrompt)},progress:B("progress")};async function Lr(){f.delayedVideo.ondblclick=()=>{document.fullscreenElement?document.exitFullscreen():document.documentElement.requestFullscreen()},B("#settings-modal form").prepend(...Object.values(f.modals).map(i=>i.parentElement)),f.delayInput.value=(x.delayInMs.get()/1e3).toFixed(1),f.delayInput.addEventListener("input",()=>{x.delayInMs.set(parseFloat(f.delayInput.value)*1e3)}),f.expandSettings.addEventListener("click",()=>f.settingsModal.showModal()),f.closeModal.addEventListener("click",()=>{Object.values(f.modals).forEach(i=>{i.dispatchEvent(new Event("change"))}),f.settingsModal.close()});function t(i,r){r.hidden=!i.get(),i.onChange(s=>r.hidden=!s)}t(x.bools.showPreview,f.previewVideo),t(x.bools.showGrid,f.grid),t(x.bools.showPreview,f.modals.previewSize.parentElement),t(x.bools.showStatus,f.status);function e(i,r){const s=n=>document.body.style.cssText=`--${r}: ${n};`;s(i.get()),i.onChange(s)}e(x.previewSize.map(i=>`${i}%`),"preview-size")}function _e(t,e){t.style.transform=e?"scaleX(-1)":""}function Nr(t){f.fatalErrorModal.querySelector("#fatal-error-text").textContent=t,f.fatalErrorModal.showModal()}const Se=await Array.fromAsync(Er());if(Se.length>0)Nr(`Sorry, your browser does not support all required features for this app. 

Known problems:

- Firefox has not yet implemented the required APIs on any platform.
- Apple does not support low-level video buffer manipulation on iPhone but iPads are supported.


${Se.join(`
`)}`),console.error("Failed requirements:",Se);else{let t=function(l){clearInterval(e);const d=setInterval(()=>f.progress.value+=100,100);e=d,setTimeout(()=>clearInterval(d),l)};Lr();let e,i=null;async function r(){await i?.stop(),i=null}async function s(){i&&await r(),f.progress.hidden=!1,f.progress.value=0,x.cameraId.get()===null&&(f.settingsModal.showModal(),await new Promise(y=>{f.settingsModal.addEventListener("close",y)}));const d=(await et()).find(y=>y.deviceId===x.cameraId.get());if(!d)return alert("Your last selected camera is no longer available, please reselect."),x.cameraId.set(null),s();const w=await xt(d,x.resolution.get()),v=x.mirrorVideo.get(),g=v==="user"?_t(w.subject):v==="on";_e(f.previewVideo,g),_e(f.previewCanvas,g),_e(f.delayedVideo,g),f.previewVideo.srcObject=w.subject,i=w}let n=null;async function o(){n&&(await n.end(),n=null)}async function a(){i===null&&await s(),n&&await o(),f.delayedVideo.hidden=!0,f.progress.value=0,f.progress.hidden=!1,f.progress.max=x.delayInMs.get(),t(x.delayInMs.get());const l=await Br(d=>{f.delayedVideo.src=URL.createObjectURL(d)},i.subject,x.delayInMs.get());n=l,l.onReady.then(()=>{f.progress.hidden=!0,f.delayedVideo.hidden=!1,f.delayedVideo.play()})}async function c(){f.togglePlayFeatherSvgUse.href.baseVal=f.togglePlayFeatherSvgUse.href.baseVal.replace("play","pause"),await s(),await a(),f.togglePlay.onclick=async()=>{await r(),await o(),f.togglePlayFeatherSvgUse.href.baseVal=f.togglePlayFeatherSvgUse.href.baseVal.replace("pause","play"),f.togglePlay.onclick=()=>c()}}(async function(){await c(),setInterval(()=>{n&&f.delayedVideo.readyState>=2&&(f.status.innerHTML=`${f.delayedVideo.videoWidth}x${f.delayedVideo.videoHeight} ${n.fpsEstimate().toFixed(0)} fps`)},5e3),f.delayInput.addEventListener("change",async()=>await a()),screen.orientation.onchange=async()=>await a(),document.onvisibilitychange=()=>{document.visibilityState==="visible"?a():document.visibilityState==="hidden"&&o()},f.save.onclick=async()=>{if(!n)return;const d=await n.buildDelayedVideo();(x.bools.saveWithoutPrompt.get()?!0:await f.confirmSave(d.size,x.delayInMs.get()/1e3))&&Fr(d.blob,n.mimeType)},x.cameraId.onChange(c),x.resolution.onChange(c),x.mirrorVideo.onChange(c)})().catch(window.alert)}
